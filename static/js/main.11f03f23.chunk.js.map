{"version":3,"sources":["TopPanel/SortBy.js","TopPanel/HouseType.js","TopPanel/LowHighFilter.js","TopPanel/MoreFilterOptions.js","TopPanel/DropdownFilter.js","TopPanel/MoreFilters.js","TopPanel/ProformaFilters.js","auth/LogoutButton.js","TopPanel/FilterBar.js","API/functions.js","RightPanel/ProformaConstant.js","RightPanel/ProformaCalculator.js","RightPanel/Property.js","LeftPanel/MapMarker.js","assets/constants.js","LeftPanel/Map.js","RightPanel/PropertyList.js","App.js","auth/AuthLandingPage.js","reportWebVitals.js","index.js"],"names":["options","value","label","SortBy","sortOrder","setSortOrder","ref","useRef","useState","isOpen","setIsOpen","handler","useEffect","listener","event","current","contains","target","className","includes","document","addEventListener","removeEventListener","useOnClickOutside","chooseSort","option","onClick","src","alt","map","HouseType","houseTypes","setHouseTypes","setReqBody","updateListings","reqBody","handleCloseOpen","handleDone","a","res","i","length","selected","push","HomeTypes","style","width","index","newHouseTypes","JSON","parse","stringify","handleOptionChoice","textAlign","formatter","Intl","NumberFormat","LowHighFilter","item","setItem","name","type","isEditingLow","setIsEditingLow","isEditingHigh","setIsEditingHigh","renderTypeIcon","low","onChange","e","updateItem","high","handleChangeLow","onBlur","format","onFocus","readOnly","handleChangeHigh","daysOnMarketOptions","styled","Select","priceReducedOptions","MoreFilters","error","setError","listPrice","setListPrice","squareFeet","setSquareFeet","beds","setBeds","baths","setBaths","yearBuilt","setYearBuilt","setFilters","body","filters","getFilterData","filterName","getDetail","filter","test","parseFloat","color","fontWeight","fontSize","marginBottom","ProformaFilters","investorEquity","investorIRR","setInvestorIRR","investorYield","setInvestorYield","arrivedRevenue","arrivedFees","parseInt","LogoutButton","logout","useAuth0","paddingRight","paddingLeft","StyledSelect","FilterBar","locations","focusedLocation","setFocusedLocation","setCenter","values","loc","undefined","lat","Lat","lng","Long","handleLocationChange","height","borderColor","borderRadius","backgroundColor","closeOnSelect","endpoint","getAllListings","order","fetch","method","headers","resp","json","content","getSingleListing","listingID","getAllLocations","data","set","Set","curr","state","State","abbrState","obj","City","trim","toLowerCase","has","add","getAllHomeTypes","Quantity","HomeType","getProformaCalcs","input","to","states","replace","txt","charAt","toUpperCase","substr","ProformaConstant","setValue","ProformaCalculator","property","isLoading","setIsLoading","rent","setRent","purchase","setPurchase","hoa","setHoa","markup","setMarkup","rate","setRate","fees","setFees","maintanence","setMaintenance","reno","setReno","tax","setTax","vacancy","setVacancy","IER","setIER","IRR","setIRR","Yield","setYield","Upfront","setUpfront","AUM","setAUM","Constants","ProformaData","InvestorEquityRequired","InvestorIRR","InvestorYield","ArrivedUpfrontRevenue","ArrivedPropertyAUMFees","handleSubmit","ListPrice","RenoBudget","RenovationPrice","HOAFee","PropertyTax","Tax","Rent","alignItems","justifyContent","Math","round","handleReset","root","getElementById","Modal","setAppElement","customStyles","top","left","overflow","Property","isModal","setClickedProperty","modalIsOpen","setModalIsOpen","ListingID","Latitude","Longitude","cursor","HouseImageURL","newAddr","FullAddress","link","marginTop","marginLeft","href","renderZillowHyperlink","result","OfferPrice","renderPrices","RentLow","RentHigh","Beds","Baths","SquareFeet","renderAmenities","YearBuilt","YearRenovated","LotFootage","renderBuildDate","stopPropagation","onRequestClose","contentLabel","MapMarker","clickedProperty","showPreview","setShowPreview","focusProperty","setFocusProperty","setTimeout","getInfo","prop","console","log","onMouseEnter","onMouseLeave","onAfterOpen","Map","center","setBounds","zoom","setZoom","setMap","loading","setLoading","isDisabled","setIsDisabled","bounds","getBounds","NE","getNorthEast","SW","getSouthWest","Max","Min","disabled","bootstrapURLKeys","key","constants","defaultCenter","defaultZoom","resetBoundsOnResize","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","maps","handleApiLoaded","boundsChange","listing","PropertyList","currentListings","fetchDetailedListings","currentPage","setCurrentPage","firstUpdate","changePage","pageNumber","Number","textContent","d","idx","page","start","floor","Array","fill","_","getPaginationGroup","LAT","LONG","FAYETTEVILLE","PostalCode","BOUNDSHIFT","App","setLocations","setData","setCurrentListings","allLocations","homeTypes","response","end","AuthLandingPage","loginWithRedirect","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","window","location","origin","ReactDOM","render","domain","process","clientId","redirectUri"],"mappings":"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","file":"static/js/main.11f03f23.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\n// Sort the right panel houses by either most or least recent or the IRR or Dividend Yield proforma values \nconst options = [\n    { value: 'MostRecent', label: 'Date Listed (newest)' },\n    { value: 'LeastRecent', label: 'Date Listed (oldest)' },\n    { value: 'InvestorIRR', label: 'Best Investor IRR' },\n    { value: 'InvestorYield', label: 'Best Dividend Yield' },\n];\n\nconst SortBy = ({ sortOrder, setSortOrder }) => {\n    // Create a ref that we add to the element for which we want to detect outside clicks\n    const ref = useRef();\n    // State for our modal\n    const [isOpen, setIsOpen] = useState(false);\n    // Call hook passing in the ref and a function to call on outside click\n    useOnClickOutside(ref, () => setIsOpen(false));\n\n    const renderOptions = () => {\n        return options.map(option => (\n            <button className={sortOrder === option.value ? \"filter-sort-option option-chosen\" : \"filter-sort-option\"}\n                onClick={() => chooseSort(option)} key={option.value}>\n                <p className=\"sort-option-text\">{option.label}</p>\n            </button>\n        ))\n    }\n\n    const chooseSort = (option) => {\n        setSortOrder(option.value);\n        setIsOpen(false);\n    }\n\n    const handleCloseOpen = () => {\n        if (!isOpen) {\n            setIsOpen(true);\n        } else {\n            setIsOpen(false);\n        }\n    }\n\n    return (\n        <div>\n            <button className=\"flex-row filter-sort-container filter-sort-touch\" onClick={() => handleCloseOpen()}>\n                <img src={'images/sort.png'} className=\"filter-sort filter-sort-touch\" alt=\"sort\" />\n                <p className=\"filter-sort-text filter-sort-touch\">SORT BY</p>\n            </button>\n            { isOpen &&\n                <div ref={ref} className=\"filter-sort-options\">\n                    {renderOptions()}\n                </div>\n            }\n        </div>\n    );\n};\n\nfunction useOnClickOutside(ref, handler) {\n    useEffect(() => {\n        const listener = event => {\n            // Do nothing if clicking ref's element or descendent elements\n            if (!ref.current || ref.current.contains(event.target)) {\n                return;\n            }\n\n            // Do not close if clicking \"Sort By\" button\n            if (event.target.className && event.target.className.includes('filter-sort-touch')) {\n                return;\n            }\n\n            handler(event);\n        };\n\n        document.addEventListener('mousedown', listener);\n        document.addEventListener('touchstart', listener);\n\n        return () => {\n            document.removeEventListener('mousedown', listener);\n            document.removeEventListener('touchstart', listener);\n        };\n    },\n        // Add ref and handler to effect dependencies\n        // It's worth noting that because passed in handler is a new ...\n        // ... function on every render that will cause this effect ...\n        // ... callback/cleanup to run every render. It's not a big deal ...\n        // ... but to optimize you can wrap handler in useCallback before ...\n        // ... passing it into this hook.\n        [ref, handler]\n    );\n}\n\nexport default SortBy;","import React, { useState, useEffect, useRef } from 'react';\n\nconst HouseType = ({ houseTypes, setHouseTypes, updateListings, setReqBody, reqBody }) => {\n    const ref = useRef();\n    const [isOpen, setIsOpen] = useState(false);\n    useOnClickOutside(ref, () => setIsOpen(false));\n\n    // Reloads all the current house type options, either checking or unchecking the selected option\n    const handleOptionChoice = (option) => {\n        let newHouseTypes = JSON.parse(JSON.stringify(houseTypes));\n        newHouseTypes[option.index].selected = !houseTypes[option.index].selected;\n        setHouseTypes(newHouseTypes);\n    }\n\n    const renderOptions = () => {\n        return houseTypes.map((option, index) => (\n            <button className=\"filter-type-btn flex-row\" onClick={() => handleOptionChoice(option)} key={index}>\n                { option.selected\n                    ? <img src={'images/check_clicked.png'} alt=\"checkbox empty\" className=\"filter-check\" />\n                    : <img src={'images/check_empty.png'} alt=\"checkbox empty\" className=\"filter-check\" />\n                }\n                <p style={{ textAlign: 'left' }}>{option.label}</p>\n            </button>\n        ));\n    }\n\n    const handleCloseOpen = () => {\n        if (!isOpen) {\n            setIsOpen(true);\n        } else {\n            setIsOpen(false);\n        }\n    }\n\n    const handleDone = async () => {\n        const res = [];\n        for (let i = 0; i < houseTypes.length; i++) {\n            if (houseTypes[i].selected) {\n                res.push(houseTypes[i].value)\n            }\n        }\n        await setReqBody({\n            ...reqBody,\n            HomeTypes: res\n        });\n        //updateListings();\n        handleCloseOpen();\n    }\n\n    return (\n        <div>\n            {/* Button before click */}\n            <div className=\"flex-row\">\n                {isOpen\n                    ? <button className=\"flex-row filter-type-container filter-type-touch type-pressed\" onClick={() => handleCloseOpen()} >House Type</button>\n                    : <button className=\"flex-row filter-type-container filter-type-touch\" onClick={() => handleCloseOpen()}>House Type</button>\n                }\n\n                <div className=\"filter-type-arrow\">\n                    {isOpen\n                        ? <img src={'images/down_arrow_white.png'} className=\"downarrow filter-type-touch\" alt=\"down_arrow\" onClick={() => handleCloseOpen()} />\n                        : <img src={'images/down_arrow_2.png'} className=\"downarrow filter-type-touch\" alt=\"down_arrow\" onClick={() => handleCloseOpen()} />\n                    }\n                </div>\n            </div>\n\n            {/* Button after click */}\n            { isOpen &&\n                <div ref={ref} className=\"filter-type-options\" style={{ width: 150 }}>\n                    <p className=\"filter-type-title\" >Home Type</p>\n                    {renderOptions()}\n                    <button className=\"filter-type-done\" onClick={() => handleDone()}>Submit</button>\n                </div>\n            }\n        </div>\n    );\n};\n\nfunction useOnClickOutside(ref, handler) {\n    useEffect(() => {\n        const listener = event => {\n            // Do nothing if clicking ref's element or descendent elements\n            if (!ref.current || ref.current.contains(event.target)) {\n                return;\n            }\n\n            // Do not close if clicking \"Home Type\" button\n            if (event.target.className && event.target.className.includes('filter-type-touch')) {\n                return;\n            }\n\n            handler(event);\n        };\n\n        document.addEventListener('mousedown', listener);\n        document.addEventListener('touchstart', listener);\n\n        return () => {\n            document.removeEventListener('mousedown', listener);\n            document.removeEventListener('touchstart', listener);\n        };\n    },\n        [ref, handler]\n    );\n}\n\nexport default HouseType;","import React, { useState } from 'react';\nimport '../styles.css';\n\nconst formatter = new Intl.NumberFormat();\n\n// https://bitbucket.org/rlestate/main/src/master/client/src/site-two/FilterBar/PriceSelectDrop.jsx\nconst LowHighFilter = ({ item, setItem, name, type }) => {\n\n    const [isEditingLow, setIsEditingLow] = useState(false);\n    const [isEditingHigh, setIsEditingHigh] = useState(false);\n\n    const handleChangeLow = (e) => {\n        let updateItem = e;\n        if (updateItem === '') {\n            updateItem = 'Min';\n        }\n        setItem({ low: updateItem, high: item.high });\n    }\n\n    const handleChangeHigh = (e) => {\n        let updateItem = e;\n        if (updateItem === '') {\n            updateItem = 'Max';\n        }\n        setItem({ low: item.low, high: updateItem });\n    }\n\n    const resetAmounts = () => {\n        setItem({ low: 'Min', high: 'Max' });\n    }\n\n    // Renders a dollar sign if it is a price, a 'ft' if square feet, or nothing\n    const renderTypeIcon = () => {\n        switch (type) {\n            case '$':\n                return <p className=\"low-high-dollar\">$</p>;\n            case 'ft':\n                return <p className=\"low-high-feet\">ft.</p>;\n            case '%':\n                return <p className=\"low-high-feet\">%</p>;\n            default:\n                return null;\n        }\n    }\n\n    // Only renders the reset button if either of the two inputs are non-zero\n    const renderResetButton = () => {\n        if (item.low != 'Min' || item.high != 'Max') {\n            return (\n                <button className=\"low-high-reset-container\" onClick={() => resetAmounts()}>\n                    <img src={'images/reset.png'} alt=\"reset filter\" className=\"low-high-reset-img\" />\n                </button>\n            )\n        } else {\n            return (\n                <button className=\"low-high-reset-container reset-hidden\">\n                    <img src={'images/reset.png'} alt=\"reset filter\" className=\"low-high-reset-img\" />\n                </button>\n            )\n        }\n    }\n\n    return (\n        <div>\n            <p className=\"low-high-text\">{name}</p>\n            <div className=\"low-high-row\">\n                <div className=\"low-high-container\">\n                    {renderTypeIcon()}\n                    {isEditingLow ? (\n                        <input\n                            className=\"low-high-input\"\n                            type=\"number\"\n                            value={item.low}\n                            onChange={(e) => handleChangeLow(e.target.value)}\n                            onBlur={(e) => {\n                                setIsEditingLow(false);\n                            }}\n                        />\n                    ) : (\n                        <input\n                            className=\"low-high-input\"\n                            type=\"text\"\n                            value={item.low === 'Min' || type === 'year' ? item.low : formatter.format(item.low)}\n                            onFocus={() => setIsEditingLow(true)}\n                            readOnly\n                        />\n                    )}\n                </div>\n\n                <div className=\"low-high-container\">\n                    {renderTypeIcon()}\n                    {isEditingHigh ? (\n                        <input\n                            className=\"low-high-input\"\n                            type=\"number\"\n                            value={item.high}\n                            onChange={(e) => handleChangeHigh(e.target.value)}\n                            onBlur={(e) => {\n                                setIsEditingHigh(false);\n                            }}\n                        />\n                    ) : (\n                        <input\n                            className=\"low-high-input\"\n                            type=\"text\"\n                            value={item.high === 'Max' || type === 'year' ? item.high : formatter.format(item.high)}\n                            onFocus={() => setIsEditingHigh(true)}\n                            readOnly\n                        />\n                    )}\n                </div>\n                {renderResetButton()}\n            </div>\n        </div>\n    )\n}\n\nexport default LowHighFilter;","export const daysOnMarketOptions = [\n    {\n        value: 'Any',\n        label: 'Any'\n    },\n    {\n        value: '1 day',\n        label: '1 day'\n    },\n    {\n        value: '7 days',\n        label: '7 days'\n    },\n    {\n        value: '14 days',\n        label: '14 days'\n    },\n    {\n        value: '30 days',\n        label: '30 days'\n    },\n    {\n        value: '90 days',\n        label: '90 day'\n    },\n    {\n        value: '6 months',\n        label: '6 months'\n    },\n    {\n        value: '12 months',\n        label: '12 months'\n    },\n    {\n        value: '24 months',\n        label: '24 months'\n    },\n    {\n        value: '36 months',\n        label: '36 months'\n    }\n];\n\nexport const priceReducedOptions = [\n    {\n        value: 'In the last 7 days',\n        label: 'In the last 7 days'\n    },\n    {\n        value: 'In the last 30 days',\n        label: 'In the last 30 days'\n    },\n    {\n        value: 'In the last 60 days',\n        label: 'In the last 60 days'\n    },\n    {\n        value: 'In the last 90 days',\n        label: 'In the last 90 days'\n    },\n    {\n        value: 'In the last 3 months',\n        label: 'In the last 3 months'\n    },\n    {\n        value: 'In the last 6 months',\n        label: 'In the last 6 months'\n    },\n    {\n        value: 'In the last 12 months',\n        label: 'In the last 12 months'\n    }\n];","import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport Select from \"react-dropdown-select\";\nimport '../styles.css';\n\nconst DropdownFilter = ({ item, setItem, itemOptions, name }) => {\n  // https://www.npmjs.com/package/react-dropdown-select\n  // Example: https://sanusart.github.io/react-dropdown-select/\n  const selectStyle = {\n    width: 220,\n    height: 1,\n    borderColor: '#888888',\n    borderRadius: 4,\n    paddingLeft: 20,\n    marginTop: 4,\n    color: '#888888',\n    fontSize: 12,\n    backgroundColor: 'white',\n    outline: 'none',\n  }\n\n  const [isVisible, setIsVisible] = useState(true);\n\n  const handleChange = (e) => {\n    if (e === undefined || e === null || e.length == 0) {\n      setItem(itemOptions[0]);\n    } else {\n      setItem(e[0]);\n    }\n  }\n\n  // If this is a component that needs a \"yes or no\" state\n  const renderCheckbox = () => {\n    if (name === 'Price Reduced') {\n      return (\n        <button className=\"dropdown-btn\" onClick={() => handleClick()}>\n          { isVisible\n            ? <img src={'/images/check_clicked.png'} alt=\"checkbox empty\" className=\"dropdown-check\" />\n            : <img src={'/images/check_empty.png'} alt=\"checkbox empty\" className=\"dropdown-check\" />\n          }\n        </button>\n      )\n    }\n  }\n\n  // Sets the Priced Reduced to null and hides the select component\n  const handleClick = () => {\n    if (isVisible) {\n      setItem({ value: null, label: null });\n    } else {\n      setItem(itemOptions[0]);\n    }\n    setIsVisible(!isVisible);\n  }\n\n  return (\n    <div>\n      <div className=\"dropdown-row\">\n        {renderCheckbox()}\n        <p className=\"low-high-text\" style={{ marginBottom: 0 }}>{name}</p>\n      </div>\n\n      { isVisible &&\n        <StyledSelect\n          options={itemOptions}\n          values={[item]}\n          onChange={(e) => handleChange(e)}\n          style={selectStyle}\n          closeOnSelect={true}\n          dropdownPosition=\"auto\"\n        />\n      }\n    </div>\n  );\n}\n\n// https://github.com/sanusart/react-dropdown-select/blob/master/docs/src/examples/Styled.js\nconst StyledSelect = styled(Select)`\n    \n  .react-dropdown-select-clear,\n  .react-dropdown-select-dropdown-handle {\n    color: #888;\n  }\n  .react-dropdown-select-option {\n    border: 1px solid #fff;\n  }\n  .react-dropdown-select-item {\n    color: #333;\n  }\n  .react-dropdown-select-input {\n    color: #333;\n  }\n  .react-dropdown-select-dropdown {\n    position: absolute;\n    left: 0;\n    border: solid;\n    border-color: transparent;\n    border-radius: 4px;\n    width: 220px;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n    max-height: 200px;\n    overflow: auto;\n    z-index: 9;\n    background: #fff;\n    color: #333 !important;\n\n    -webkit-box-shadow: 4px 4px 4px 0px rgba(0, 0, 0, 0.25);\n    -moz-box-shadow: 4px 4px 4px 0px rgba(0, 0, 0, 0.25);\n    box-shadow: 4px 4px 4px 0px rgba(0, 0, 0, 0.25);\n  }\n  .react-dropdown-select-item {\n    color: #333;\n    :hover {\n       background-color: #d9ddff;\n    }\n  }\n  .react-dropdown-select-item.react-dropdown-select-item-selected,\n  .react-dropdown-select-item.react-dropdown-select-item-active {\n    color: #fff;\n    background: #818cdc;\n  }\n  .react-dropdown-select-item.react-dropdown-select-item-disabled {\n    background: #818cdc;\n    color: #ccc;\n  }\n`;\n\nexport default DropdownFilter;","import React, { useState, useEffect, useRef } from 'react';\nimport LowHighFilter from './LowHighFilter';\nimport DropdownFilter from './DropdownFilter';\nimport { daysOnMarketOptions, priceReducedOptions } from './MoreFilterOptions';\n\nconst MoreFilters = ({ setReqBody, reqBody }) => {\n    // Hide on click\n    const ref = useRef();\n    const [isOpen, setIsOpen] = useState(false);\n    useOnClickOutside(ref, () => setIsOpen(false));\n\n    const [error, setError] = useState(null);\n\n    const [listPrice, setListPrice] = useState({ low: 'Min', high: 'Max' });\n    const [offerPrice, setOfferPrice] = useState({ low: 'Min', high: 'Max' });\n    const [rentalPrice, setRentalPrice] = useState({ low: 'Min', high: 'Max' });\n    const [squareFeet, setSquareFeet] = useState({ low: 'Min', high: 'Max' });\n    const [beds, setBeds] = useState({ low: 'Min', high: 'Max' });\n    const [baths, setBaths] = useState({ low: 'Min', high: 'Max' });\n    const [yearBuilt, setYearBuilt] = useState({ low: 'Min', high: 'Max' });\n\n    const [onMarket, setOnMarket] = useState(daysOnMarketOptions[0]);\n    const [priceReduced, setPriceReduced] = useState(priceReducedOptions[0]);\n\n    const handleCloseOpen = () => {\n        if (!isOpen) {\n            setIsOpen(true);\n        } else {\n            setIsOpen(false);\n        }\n    }\n\n    const setFilters = async () => {\n        setError(null);\n        const body = {};\n        const filters = ['Bathrooms', 'Beds', 'Price', 'SqFt', 'YearBuilt'];\n        for (let i = 0; i < filters.length; i++) {\n            getFilterData(filters[i], body);\n        }\n\n        setReqBody({\n            ...reqBody,\n            ...body\n        });\n\n        handleCloseOpen()\n    }\n\n    const getFilterData = (filterName, body) => {\n        switch (filterName) {\n            case 'Bathrooms':\n                getDetail(filterName, baths, body);\n                break;\n            case 'Beds':\n                getDetail(filterName, beds, body);\n                break;\n            case 'Price':\n                getDetail(filterName, listPrice, body);\n                break;\n            case 'SqFt':\n                getDetail(filterName, squareFeet, body);\n                break;\n            case 'YearBuilt':\n                getDetail(filterName, yearBuilt, body);\n                break;\n            default:\n                return;\n        }\n    }\n    const getDetail = (filterName, filter, body) => {\n        if ((filter.low).includes('.') || (filter.high).includes('.')) {\n            setError('You may only pass in whole numbers for the ' + filterName + ' property');\n        }\n        if (filter.low !== 'Min' && /^\\d+$/.test(filter.low)) {\n            body[filterName + 'Low'] = parseFloat(filter.low);\n        } else {\n            body[filterName + 'Low'] = null;\n        }\n        if (filter.high !== 'Max' && /^\\d+$/.test(filter.high)) {\n            body[filterName + 'High'] = parseFloat(filter.high);\n        } else {\n            body[filterName + 'High'] = null;\n        }\n    }\n\n    return (\n        <div>\n            {/* Button before click */}\n            <div className=\"flex-row\">\n                {isOpen\n                    ?\n                    <button className=\"flex-row filter-type-container filter-more-container filter-more-touch type-pressed\" onClick={() => handleCloseOpen()}>\n                        <img src={'images/filter_white.png'} alt=\"filter\" className=\"filter-more-img filter-more-touch\" />\n                        <p>Filters</p>\n                    </button>\n                    :\n                    <button className=\"flex-row filter-type-container filter-more-container\" onClick={() => handleCloseOpen()}>\n                        <img src={'images/filter_gray.png'} alt=\"filter\" className=\"filter-more-img\" />\n                        <p>Filters</p>\n                    </button>\n                }\n            </div>\n\n            {/* Button after click */}\n            { isOpen &&\n                <div ref={ref} className=\"filter-type-options\">\n                    <LowHighFilter item={listPrice} setItem={setListPrice} name=\"Listing Price\" type=\"$\" />\n                    {/* <LowHighFilter item={offerPrice} setItem={setOfferPrice} name=\"Offer Price\" type=\"$\" />\n                    <LowHighFilter item={rentalPrice} setItem={setRentalPrice} name=\"Rental Price\" type=\"$\" /> */}\n                    <LowHighFilter item={squareFeet} setItem={setSquareFeet} name=\"Square Feet\" type=\"ft\" />\n                    <LowHighFilter item={beds} setItem={setBeds} name=\"Beds\" type=\"\" />\n                    <LowHighFilter item={baths} setItem={setBaths} name=\"Baths\" type=\"\" />\n                    <LowHighFilter item={yearBuilt} setItem={setYearBuilt} name=\"Year Built\" type=\"year\" />\n\n                    {/* <DropdownFilter item={onMarket} setItem={setOnMarket} itemOptions={daysOnMarketOptions} name=\"Days on Market\" /> */}\n                    {/*  <DropdownFilter item={priceReduced} setItem={setPriceReduced} itemOptions={priceReducedOptions} name=\"Price Reduced\" /> */}\n\n                    {error && <p style={{ color: '#818cdc', fontWeight: 'bold', fontSize: 12, marginBottom: 0, width: '90%', textAlign: 'center' }}>{error}</p>}\n                    <button className=\"filter-type-done\" onClick={() => setFilters()}>Set filters</button>\n                </div>\n            }\n        </div>\n    );\n};\n\nfunction useOnClickOutside(ref, handler) {\n    useEffect(() => {\n        const listener = event => {\n            // Do nothing if clicking ref's element or descendent elements\n            if (!ref.current || ref.current.contains(event.target)) {\n                return;\n            }\n\n            // Do not close if clicking \"Sort By\" button\n            if (event.target.className && event.target.className.includes('filter-more-touch')) {\n                return;\n            }\n\n            handler(event);\n        };\n\n        document.addEventListener('mousedown', listener);\n        document.addEventListener('touchstart', listener);\n\n        return () => {\n            document.removeEventListener('mousedown', listener);\n            document.removeEventListener('touchstart', listener);\n        };\n    },\n        // Add ref and handler to effect dependencies\n        // It's worth noting that because passed in handler is a new ...\n        // ... function on every render that will cause this effect ...\n        // ... callback/cleanup to run every render. It's not a big deal ...\n        // ... but to optimize you can wrap handler in useCallback before ...\n        // ... passing it into this hook.\n        [ref, handler]\n    );\n}\n\nexport default MoreFilters;","import React, { useState, useEffect, useRef } from 'react';\nimport LowHighFilter from './LowHighFilter';\n\nconst ProformaFilters = ({ setReqBody, reqBody }) => {\n    const ref = useRef();\n    const [isOpen, setIsOpen] = useState(false);\n    useOnClickOutside(ref, () => setIsOpen(false));\n\n    const [investorEquity, setInvestorEquity] = useState({ low: 'Min', high: 'Max' });\n    const [investorIRR, setInvestorIRR] = useState({ low: 'Min', high: 'Max' });\n    const [investorYield, setInvestorYield] = useState({ low: 'Min', high: 'Max' });\n    const [arrivedRevenue, setArrivedRevenue] = useState({ low: 'Min', high: 'Max' });\n    const [arrivedFees, setArrivedFees] = useState({ low: 'Min', high: 'Max' });\n\n    const handleCloseOpen = () => {\n        if (!isOpen) {\n            setIsOpen(true);\n        } else {\n            setIsOpen(false);\n        }\n    }\n\n    const setFilters = async () => {\n        const body = {};\n        const filters = ['InvestorIRR', 'InvestorEquityRequired', 'InvestorYield', 'ArrivedPropertyAUMFees', 'ArrivedUpfrontRevenue'];\n        for (let i = 0; i < filters.length; i++) {\n            getFilterData(filters[i], body);\n        }\n\n        setReqBody({\n            ...reqBody,\n            ...body\n        });\n\n        handleCloseOpen()\n    }\n\n    const getFilterData = (filterName, body) => {\n        switch (filterName) {\n            case 'InvestorEquityRequired':\n                getDetail(filterName, investorEquity, body);\n                break;\n            case 'InvestorIRR':\n                getDetail(filterName, investorIRR, body);\n                break;\n            case 'InvestorYield':\n                getDetail(filterName, investorYield, body);\n                break;\n            case 'ArrivedUpfrontRevenue':\n                getDetail(filterName, arrivedRevenue, body);\n                break;\n            case 'ArrivedPropertyAUMFees':\n                getDetail(filterName, arrivedFees, body);\n                break;\n            default:\n                return;\n        }\n    }\n    const getDetail = (filterName, filter, body) => {\n        if (filter.low !== 'Min' && /^\\d+$/.test(filter.low)) {\n            body[filterName + 'Low'] = (parseInt(filter.low) / 100);\n        } else {\n            body[filterName + 'Low'] = 0;\n        }\n        if (filter.high !== 'Max' && /^\\d+$/.test(filter.high)) {\n            body[filterName + 'High'] = parseInt(filter.high) / 100;\n        } else {\n            body[filterName + 'High'] = 1;\n        }\n    }\n\n    return (\n        <div>\n            {/* Button before click */}\n            <div className=\"flex-row\">\n                {isOpen\n                    ?\n                    <button className=\"flex-row filter-type-container filter-more-container filter-more-touch type-pressed\" onClick={() => handleCloseOpen()}>\n                        <img src={'images/filter_white.png'} alt=\"filter\" className=\"filter-more-img filter-more-touch\" />\n                        <p>Proforma</p>\n                    </button>\n                    :\n                    <button className=\"flex-row filter-type-container filter-more-container\" onClick={() => handleCloseOpen()}>\n                        <img src={'images/filter_gray.png'} alt=\"filter\" className=\"filter-more-img\" />\n                        <p>Proforma</p>\n                    </button>\n                }\n            </div>\n\n            {/* Button after click */}\n            { isOpen &&\n                <div ref={ref} className=\"filter-type-options\">\n                    {/* <LowHighFilter item={investorEquity} setItem={setInvestorEquity} name=\"Investor Equity\" type=\"$\" /> */}\n                    <LowHighFilter item={investorIRR} setItem={setInvestorIRR} name=\"Investor IRR\" type=\"%\" />\n                    <LowHighFilter item={investorYield} setItem={setInvestorYield} name=\"Investor Yield\" type=\"%\" />\n                    {/* <LowHighFilter item={arrivedRevenue} setItem={setArrivedRevenue} name=\"Arrived Upfront Revenue\" type=\"$\" />\n                    <LowHighFilter item={arrivedFees} setItem={setArrivedFees} name=\"Arrived Property Fees\" type=\"$\" /> */}\n\n                    <button className=\"filter-type-done\" onClick={() => setFilters()}>Set filters</button>\n                </div>\n            }\n        </div>\n    );\n};\n\nfunction useOnClickOutside(ref, handler) {\n    useEffect(() => {\n        const listener = event => {\n            if (!ref.current || ref.current.contains(event.target)) {\n                return;\n            }\n\n            if (event.target.className && event.target.className.includes('filter-more-touch')) {\n                return;\n            }\n\n            handler(event);\n        };\n\n        document.addEventListener('mousedown', listener);\n        document.addEventListener('touchstart', listener);\n\n        return () => {\n            document.removeEventListener('mousedown', listener);\n            document.removeEventListener('touchstart', listener);\n        };\n    },\n        [ref, handler]\n    );\n}\n\nexport default ProformaFilters;","import React from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nconst LogoutButton = () => {\n    const { logout } = useAuth0();\n\n    return (\n        <button className=\"filter-type-container\" style={{ width: 'auto', paddingRight: 16, paddingLeft: 16 }} onClick={() => logout()}>\n            Logout\n        </button>\n    )\n}\n\nexport default LogoutButton;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport SortBy from './SortBy';\nimport HouseType from './HouseType';\nimport MoreFilters from './MoreFilters';\nimport Select from \"react-dropdown-select\";\nimport ProformaFilters from './ProformaFilters';\nimport LogoutButton from '../auth/LogoutButton';\nimport '../styles.css';\n\nconst FilterBar = ({ locations, focusedLocation, setFocusedLocation,\n  setCenter, houseTypes, setHouseTypes, sortOrder, setSortOrder,\n  setReqBody, reqBody, updateListings }) => {\n\n  // https://www.npmjs.com/package/react-dropdown-select\n  // Example: https://sanusart.github.io/react-dropdown-select/\n  const selectStyle = {\n    width: 360,\n    height: 28,\n    borderColor: '#888888',\n    borderRadius: 4,\n    paddingLeft: 36,\n    color: '#333333',\n    fontSize: 18,\n    backgroundColor: 'white',\n  }\n\n  const handleLocationChange = (loc) => {\n    if (loc === undefined || loc === null || loc.length == 0) {\n      setFocusedLocation(null);\n    } else {\n      setFocusedLocation(loc[0]);\n      setCenter({ lat: loc[0].Lat, lng: loc[0].Long });\n    }\n  }\n\n  return (\n    <div className=\"filter-container\">\n\n      {/* Text Input */}\n      <div className=\"flex-row\">\n        <div className=\"flex-row\">\n          <img src={'images/search.png'} className=\"filter-search\" alt=\"search\" />\n          <StyledSelect\n            options={locations}\n            values={[focusedLocation]}\n            onChange={(loc) => handleLocationChange(loc)}\n            style={selectStyle}\n            closeOnSelect={true}\n          />\n        </div>\n\n        <HouseType {...{ houseTypes, setHouseTypes, updateListings, setReqBody, reqBody }} />\n\n        <MoreFilters {...{ setReqBody, reqBody }} />\n\n        <ProformaFilters {...{ setReqBody, reqBody }} />\n\n      </div>\n      <div className=\"flex-row\">\n        <SortBy {...{ sortOrder, setSortOrder }} />\n        <LogoutButton />\n      </div>\n    </div>\n  );\n};\n\n// https://github.com/sanusart/react-dropdown-select/blob/master/docs/src/examples/Styled.js\nconst StyledSelect = styled(Select)`\n    \n  .react-dropdown-select-clear,\n  .react-dropdown-select-dropdown-handle {\n    color: #888;\n  }\n  .react-dropdown-select-option {\n    border: 1px solid #fff;\n  }\n  .react-dropdown-select-item {\n    color: #333;\n  }\n  .react-dropdown-select-input {\n    color: #333;\n  }\n  .react-dropdown-select-dropdown {\n    position: absolute;\n    left: 0;\n    border: solid;\n    border-color: transparent;\n    border-radius: 4px;\n    width: 360px;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n    max-height: 300px;\n    overflow: auto;\n    z-index: 9;\n    background: #fff;\n    color: #333 !important;\n\n    -webkit-box-shadow: 4px 4px 4px 0px rgba(0, 0, 0, 0.25);\n    -moz-box-shadow: 4px 4px 4px 0px rgba(0, 0, 0, 0.25);\n    box-shadow: 4px 4px 4px 0px rgba(0, 0, 0, 0.25);\n  }\n  .react-dropdown-select-item {\n    color: #333;\n    :hover {\n       background-color: #d9ddff;\n    }\n  }\n  .react-dropdown-select-item.react-dropdown-select-item-selected,\n  .react-dropdown-select-item.react-dropdown-select-item-active {\n    color: #fff;\n    background: #818cdc;\n  }\n  .react-dropdown-select-item.react-dropdown-select-item-disabled {\n    background: #818cdc;\n    color: #ccc;\n  }\n`;\n\nexport default FilterBar;","const endpoint = 'https://huskymarket.club';\nconst getListings = 'GetAllListings';\n\n// Example: http://18.224.93.180/GetAllListings?OrderType=MostRecent\n\n// Gets all the listings given a body parameter that is an object representing all filters\n// Also includes a URL parameter that tell show the listings should be sorted (least or most recent)\nexport const getAllListings = async (body, order) => {\n    const resp = await fetch(`${endpoint}/${getListings}?OrderType=${order}`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Headers': 'Content-Type'\n        },\n        body: JSON.stringify(body)\n    });\n\n\n    const content = await resp.json();\n    return content;\n}\n\n// Gets Agent notes and proforma calculations based on a single listing property\nexport const getSingleListing = async (listingID) => {\n    const resp = await fetch(`${endpoint}/GetSingleListing?ListingID=${listingID}`);\n    return resp.json();\n}\n\n// Get all the locations of all the Arrived Homes markets for the search bar component\n// Returns all the locations that the user can search for in the filter bar\n// Filters it so that there are no duplicates accoring to City and State name\nexport const getAllLocations = async () => {\n    const resp = await fetch(`${endpoint}/GetAllLocations`);\n    const data = await resp.json();\n    let res = [];\n\n    const set = new Set();\n\n    // Format the locations array to include a label and value\n    for (let i = 0; i < data.length; i++) {\n        let curr = data[i];\n        let state = curr.State;\n        if (state.length > 2) {\n            state = abbrState(state, 'abbr');\n            curr.State = state;\n        }\n\n        const obj = '' + curr.City.trim().toLowerCase() + state.trim().toLowerCase();\n\n        // If not already in the list of locations, add it to the results\n        if (!set.has(obj)) {\n            set.add(obj);\n            curr.label = curr.City + \", \" + state;\n            curr.value = i;\n            res.push(curr);\n        }\n    }\n\n    return res;\n}\n\n// Get all the locations of all the Arrived Homes markets for the search bar component\nexport const getAllHomeTypes = async () => {\n    const resp = await fetch(`${endpoint}/GetAllHomeTypes`);\n    const data = await resp.json();\n    let res = [];\n    for (let i = 0; i < data.length; i++) {\n        let curr = data[i];\n        // There needs to be more than 5 listing of this type to add it to our filter bar\n        if (curr.Quantity > 5) {\n            res.push({\n                value: curr.HomeType,\n                label: curr.HomeType,\n                index: i,\n                selected: true\n            });\n        }\n\n    }\n    return res;\n}\n\n// Get all the proforma calculations of one specific property\nexport const getProformaCalcs = async (body) => {\n    const resp = await fetch(`${endpoint}/CalcProformaData`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Headers': 'Content-Type'\n        },\n        body: JSON.stringify(body)\n    });\n\n    const data = await resp.json();\n\n    return data;\n}\n\nfunction abbrState(input, to) {\n\n    var states = [\n        ['Arizona', 'AZ'],\n        ['Alabama', 'AL'],\n        ['Alaska', 'AK'],\n        ['Arkansas', 'AR'],\n        ['California', 'CA'],\n        ['Colorado', 'CO'],\n        ['Connecticut', 'CT'],\n        ['Delaware', 'DE'],\n        ['Florida', 'FL'],\n        ['Georgia', 'GA'],\n        ['Hawaii', 'HI'],\n        ['Idaho', 'ID'],\n        ['Illinois', 'IL'],\n        ['Indiana', 'IN'],\n        ['Iowa', 'IA'],\n        ['Kansas', 'KS'],\n        ['Kentucky', 'KY'],\n        ['Louisiana', 'LA'],\n        ['Maine', 'ME'],\n        ['Maryland', 'MD'],\n        ['Massachusetts', 'MA'],\n        ['Michigan', 'MI'],\n        ['Minnesota', 'MN'],\n        ['Mississippi', 'MS'],\n        ['Missouri', 'MO'],\n        ['Montana', 'MT'],\n        ['Nebraska', 'NE'],\n        ['Nevada', 'NV'],\n        ['New Hampshire', 'NH'],\n        ['New Jersey', 'NJ'],\n        ['New Mexico', 'NM'],\n        ['New York', 'NY'],\n        ['North Carolina', 'NC'],\n        ['North Dakota', 'ND'],\n        ['Ohio', 'OH'],\n        ['Oklahoma', 'OK'],\n        ['Oregon', 'OR'],\n        ['Pennsylvania', 'PA'],\n        ['Rhode Island', 'RI'],\n        ['South Carolina', 'SC'],\n        ['South Dakota', 'SD'],\n        ['Tennessee', 'TN'],\n        ['Texas', 'TX'],\n        ['Utah', 'UT'],\n        ['Vermont', 'VT'],\n        ['Virginia', 'VA'],\n        ['Washington', 'WA'],\n        ['West Virginia', 'WV'],\n        ['Wisconsin', 'WI'],\n        ['Wyoming', 'WY'],\n    ];\n\n    if (to == 'abbr') {\n        input = input.replace(/\\w\\S*/g, function (txt) { return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase(); });\n        for (let i = 0; i < states.length; i++) {\n            if (states[i][0] == input) {\n                return (states[i][1]);\n            }\n        }\n    } else if (to == 'name') {\n        input = input.toUpperCase();\n        for (let i = 0; i < states.length; i++) {\n            if (states[i][1] == input) {\n                return (states[i][0]);\n            }\n        }\n    }\n}","import React from 'react';\n\nconst ProformaConstant = ({ value, setValue, name }) => {\n\n    return (\n        <div>\n            <p className=\"proformaTitle\">{name}</p>\n            <input type=\"number\" value={value} onChange={(e) => setValue(e.target.value)} />\n        </div>\n    )\n}\n\nexport default ProformaConstant;","import React, { useState, useEffect } from 'react';\nimport { getProformaCalcs } from '../API/functions';\nimport ProformaConstant from './ProformaConstant';\nconst formatter = Intl.NumberFormat();\n\nconst ProformaCalculator = ({ property }) => {\n    const [isLoading, setIsLoading] = useState(true);\n    // Constants\n    const [rent, setRent] = useState(null);\n    const [purchase, setPurchase] = useState(null);\n    const [hoa, setHoa] = useState(null);\n    const [markup, setMarkup] = useState(null);\n    const [rate, setRate] = useState(null);\n    const [fees, setFees] = useState(null);\n    const [maintanence, setMaintenance] = useState(null);\n    const [reno, setReno] = useState(null);\n    const [tax, setTax] = useState(null);\n    const [vacancy, setVacancy] = useState(null);\n\n\n    // Results\n    const [IER, setIER] = useState(null);\n    const [IRR, setIRR] = useState(null);\n    const [Yield, setYield] = useState(null);\n    const [Upfront, setUpfront] = useState(null);\n    const [AUM, setAUM] = useState(null);\n\n    useEffect(() => {\n        if (property) {\n            const { ProformaData } = property;\n            const { Constants } = ProformaData;\n            setPurchase(property[\"ListPrice\"]);\n            setRent(property[\"RentLow\"] || '');\n            setHoa(property[\"HOAFee\"] || '');\n            setMarkup(Constants[\"Arrived Markup\"]);\n            setRate(Constants[\"Interest Rate\"]);\n            setFees(Constants[\"Loan Fees\"]);\n            setMaintenance(Constants[\"Maintenance %\"]);\n            setReno(2000);\n            setTax(Constants[\"Tax\"]);\n            setVacancy(Constants[\"Vacancy %\"]);\n\n\n            setIER(property.ProformaData.InvestorEquityRequired)\n            setIRR(property.ProformaData.InvestorIRR)\n            setYield(property.ProformaData.InvestorYield)\n            setUpfront(property.ProformaData.ArrivedUpfrontRevenue)\n            setAUM(property.ProformaData.ArrivedPropertyAUMFees)\n            setIsLoading(false);\n        }\n    }, [property]);\n\n    // Send a request with the updated constants based on this calculator tool\n    const handleSubmit = async () => {\n        const body = {\n            ListPrice: parseFloat(purchase),\n            RenoBudget: property.RenovationPrice,\n            HOAFee: parseFloat(hoa || 0),\n            PropertyTax: property.ProformaData.Constants.Tax,\n            Rent: parseFloat(rent),\n            RenoBudget: parseFloat(reno),\n        }\n\n        const Constants = {\n            \"Arrived Markup\": parseFloat(markup),\n            \"Interest Rate\": parseFloat(rate),\n            \"Loan Fees\": parseFloat(fees),\n            \"Maintenance %\": parseFloat(maintanence),\n            \"Tax\": parseFloat(tax),\n            \"Vacancy %\": parseFloat(vacancy),\n        };\n\n        body.Constants = Constants;\n\n        const res = await getProformaCalcs(body);\n\n        setIER(res.InvestorEquityRequired)\n        setIRR(res.InvestorIRR)\n        setYield(res.InvestorYield)\n        setUpfront(res.ArrivedUpfrontRevenue)\n        setAUM(res.ArrivedPropertyAUMFees)\n    }\n\n    // Fill all of the proforma constants with their original values when starting the calculator\n    // Essentially resetting the entire state to what it was when opening the calculator\n    const handleReset = () => {\n        const { ProformaData } = property;\n        const { Constants } = ProformaData;\n        setMarkup(Constants[\"Arrived Markup\"]);\n        setHoa(property[\"HOAFee\"] || '');\n        setRent(property[\"RentLow\"] || '');\n        setPurchase(property[\"ListPrice\"]);\n        setRate(Constants[\"Interest Rate\"]);\n        setFees(Constants[\"Loan Fees\"]);\n        setMaintenance(Constants[\"Maintenance %\"]);\n        setReno(2000);\n        setTax(Constants[\"Tax\"]);\n        setVacancy(Constants[\"Vacancy %\"]);\n    }\n\n    if (isLoading) {\n        return <p>Loading</p>\n    } else {\n        return (\n            <>\n                <p className=\"proformaCalcTitle\">Proforma Calculator</p>\n                <div className=\"flex-row\" style={{ alignItems: 'flex-start' }}>\n                    <div className=\"proformaCol1\">\n                        <ProformaConstant value={purchase} setValue={setPurchase} name={\"Purchase Price $\"} />\n                        <ProformaConstant value={rent} setValue={setRent} name={\"Rent/month $\"} />\n                        <ProformaConstant value={hoa} setValue={setHoa} name={\"HOA/month $\"} />\n                        <ProformaConstant value={markup} setValue={setMarkup} name={\"Arrived Markup\"} />\n                        <ProformaConstant value={maintanence} setValue={setMaintenance} name={\"Maintenance %\"} />\n                    </div>\n                    <div className=\"proformaCol1\">\n                        <ProformaConstant value={reno} setValue={setReno} name={\"Reno budget $\"} />\n                        <ProformaConstant value={tax} setValue={setTax} name={\"Tax/yr $\"} />\n                        <ProformaConstant value={vacancy} setValue={setVacancy} name={\"Vacancy %\"} />\n                        <ProformaConstant value={rate} setValue={setRate} name={\"Interest Rate\"} />\n                        <ProformaConstant value={fees} setValue={setFees} name={\"Loan Fees\"} />\n                    </div>\n                    <div className=\"flex-column\" style={{ width: '60%', justifyContent: 'space-between', alignItems: 'center', paddingRight: 48 }}>\n                        <div className=\"flex-row\" style={{ justifyContent: 'space-evenly' }}>\n                            <div>\n                                <p>Investor Equity Required</p>\n                                <p>Investor IRR (Year 7)</p>\n                                <p>Investor Yield (Year 1)</p>\n                                <p>Arrived Upfront Revenue</p>\n                                <p>Arrived Property AUM Fees (7 yr)</p>\n                            </div>\n                            <div className=\"proformaCol3\">\n                                <p>${formatter.format(Math.round(IER))}</p>\n                                <p>{Math.round(IRR * 10000) / 100}%</p>\n                                <p>{Math.round(Yield * 10000) / 100}%</p>\n                                <p>${formatter.format(Math.round(Upfront))}</p>\n                                <p>${formatter.format(Math.round(AUM))}</p>\n                            </div>\n                        </div>\n                        <div className=\"flex-column\">\n                            <button className=\"filter-type-done\" onClick={() => handleSubmit()}>Update Proforma Constants</button>\n                            <button className=\"filter-type-done proformaButtonTrans\" onClick={() => handleReset()}>Reset Proforma</button>\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n\n}\n\nexport default ProformaCalculator;","import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { getProformaCalcs } from '../API/functions';\nimport ProformaCalculator from './ProformaCalculator';\nimport '../styles.css';\n\n// Dollar formatter\nconst formatter = Intl.NumberFormat();\nconst root = document.getElementById(\"root\");\nModal.setAppElement(root);\n\n// https://www.npmjs.com/package/react-modal\nconst customStyles = {\n    content: {\n        top: '15%',\n        left: '17%',\n        height: '60vh',\n        width: '65vw',\n        paddingLeft: '24px',\n        paddingRight: '0px',\n        overflow: 'visible',\n    }\n}\n\nconst Property = ({ property, isModal, setCenter, setClickedProperty }) => {\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n\n    // Get constants for proforma calculator module??? I guess?\n    const getInfo = async () => {\n        // const body = {\n        //     OfferPrice: property.OfferPrice,\n        //     RenoBudget: property.RenovationPrice,\n        //     HOAFee: property.HOAFee,\n        //     PropertyTax: property.ProformaData.Constants.Tax\n        // }\n        // //await getProformaCalcs(body);\n\n        // setIsLoading(false);\n    }\n\n    const renderPrices = () => {\n        let result = \"\";\n        if (property.ListPrice !== null) {\n            result += \"List: $\" + formatter.format(property.ListPrice) + `\\u00A0\\u00A0`;\n        }\n        if (property.OfferPrice && property.OfferPrice !== 'Need Agent Input') {\n            result += \" Offer: $\" + formatter.format(property.OfferPrice) + `\\u00A0\\u00A0`;\n        }\n        if (property.RenovationPrice && property.RenovationPrice !== 'Need Agent Input') {\n            result += \" Reno: $\" + formatter.format(property.RenovationPrice);\n        }\n\n        return result;\n    }\n\n    // Renders the beds, baths, and square feet\n    const renderAmenities = () => {\n        let result = \"\";\n        if (property.Beds) {\n            result += property.Beds + \" Bed\"\n        }\n        if (property.Beds && property.Baths) result += \" / \";\n        if (property.Baths) {\n            result += property.Baths + \" Bath\" + `\\u00A0\\u00A0`;\n        }\n        if (property.SquareFeet) {\n            result += formatter.format(property.SquareFeet) + \" sqft. house\"\n        }\n        return result;\n    }\n\n    const renderBuildDate = () => {\n        let result = \"\";\n        if (property.YearBuilt) {\n            result += \"Built: \" + property.YearBuilt + `\\u00A0\\u00A0`;\n        }\n        if (property.YearRenovated) {\n            result += \"Renovated: \" + property.YearRenovated\n        }\n        if (property.LotFootage) {\n            result += formatter.format(property.LotFootage) + \" sqft. lot size\"\n        }\n        return result;\n    }\n\n    const renderZillowHyperlink = () => {\n        const address = property.FullAddress;\n        const newAddr = address.replace(/ /g, \"-\");\n        const link = `http://zillow.com/homes/${newAddr}_rb`\n\n        return <div className=\"flex-row\" style={{ alignItems: 'center', marginTop: 4, marginLeft: 4, marginBottom: 4 }}>\n            <img src={'images/zillow.png'} alt=\"zillow\" className=\"property-hyper-img\" />\n            <a href={link} style={{ fontSize: 14 }} target=\"_blank\">View on Zillow</a>\n        </div>\n    }\n\n    // When clicking component, it loads the same location on the map\n    const handleFocusProperty = () => {\n        setClickedProperty(property.ListingID);\n        setCenter({ lat: property.Latitude, lng: property.Longitude });\n    }\n\n    return (\n        <>\n            <div\n                onClick={() => !isModal && handleFocusProperty()}\n                className=\"flex-row prop-container\"\n                style={!isModal ? { cursor: 'pointer' } : { cursor: 'default' }}\n            >\n                {/* Left column */}\n                <div className=\"prop-col-1\">\n                    <img src={property.HouseImageURL}\n                        className={isModal ? \"prop-image-lg\" : \"prop-image\"}\n                        alt=\"Single family home\"\n                    />\n                    {renderZillowHyperlink()}\n                    <div className=\"flex-row\" style={{ alignItems: 'center', marginTop: 4, marginLeft: 4 }}>\n                        <button className=\"hyperlink-btn\" onClick={() => setModalIsOpen(true)}>Calculate Proforma</button>\n                    </div>\n\n                </div>\n                {/* Right column */}\n                <div className=\"prop-col-2\">\n                    <p className=\"prop-title\">{property.FullAddress}, {property.City}</p>\n\n                    <div className=\"prop-text-container\">\n                        <p>{renderPrices()}</p>\n                        <div className=\"flex-row\">\n                            {property.RentLow &&\n                                <p>Rent Low: ${formatter.format(Math.round(property.RentLow)) + `\\u00A0\\u00A0`}</p>\n                            }\n                            {property.RentHigh &&\n                                <p>Rent High: ${formatter.format(Math.round(property.RentHigh))}</p>\n                            }\n                        </div>\n                        <p>{renderAmenities()}</p>\n                        <p>{renderBuildDate()}</p>\n                    </div>\n                    <div className=\"flex-row flex-start prop-text-container\">\n                        <div className=\"prop-proforma-col-1\">\n                            <p>Investor Equity Required</p>\n                            <p>Investor IRR (Year 7)</p>\n                            <p>Investor Yield (Year 1)</p>\n                            <p>Arrived Upfront Revenue</p>\n                            <p>Arrived Property AUM Fees (7 yr)</p>\n                            {/* TODO: Implement the below line when it is in the backend */}\n                            {/* <p>Arrived Management Markup (7yr)</p> */}\n                        </div>\n                        <div>\n                            <p>${formatter.format(Math.round(property.ProformaData.InvestorEquityRequired))}</p>\n                            <p>{Math.round(property.ProformaData.InvestorIRR * 10000) / 100}%</p>\n                            <p>{Math.round(property.ProformaData.InvestorYield * 10000) / 100}%</p>\n                            <p>${formatter.format(Math.round(property.ProformaData.ArrivedUpfrontRevenue))}</p>\n                            <p>${formatter.format(Math.round(property.ProformaData.ArrivedPropertyAUMFees))}</p>\n                            {/* <p>${formatter.format(property.ProformaData.ArrivedManagementMarkup)}</p> */}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div onClick={(e) => e.stopPropagation()}>\n                <Modal\n                    isOpen={modalIsOpen}\n                    onRequestClose={() => setModalIsOpen(false)}\n                    contentLabel=\"Listing Modal\"\n                    style={customStyles}\n                //onAfterOpen={() => getInfo()}\n                >\n\n                    <>\n                        <ProformaCalculator property={property} />\n                        <button className=\"marker-modal-close\" onClick={() => setModalIsOpen(false)}>\n                            <img className=\"modal-img-close\" src={'images/close_modal.png'} alt=\"close modal\" />\n                        </button>\n                    </>\n\n                </Modal>\n            </div>\n        </>\n    );\n};\n\nexport default Property;","import React, { useState, useEffect } from 'react';\nimport { getSingleListing } from '../API/functions';\nimport Modal from 'react-modal';\nimport Property from '../RightPanel/Property';\nimport '../styles.css';\n\nconst formatter = Intl.NumberFormat();\nconst root = document.getElementById(\"root\");\nModal.setAppElement(root);\n\n// https://www.npmjs.com/package/react-modal\nconst customStyles = {\n    content: {\n        top: '15%',\n        left: '17%',\n        height: '55vh',\n        width: '65vw',\n        paddingLeft: '24px',\n        paddingRight: '0px',\n        overflow: 'visible',\n    }\n}\n\n// On hover, it shows the image, buy price, beds/baths. Also, change color from red to blue.\n// On click, opens an alert with the entire house component\nconst MapMarker = ({ property, clickedProperty }) => {\n    const [showPreview, setShowPreview] = useState(false);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [focusProperty, setFocusProperty] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n\n    // Automatically time out preview modal after 5 seconds\n    useEffect(() => {\n        if (showPreview) {\n            setTimeout(() => {\n                setShowPreview(false);\n            }, 5000)\n        }\n    }, [showPreview])\n\n    // If the user clicked the right panel property, show its marker's preview \n    useEffect(() => {\n        if (clickedProperty == property.ListingID) {\n            setShowPreview(true);\n        }\n    }, [clickedProperty]);\n\n    // Get more information on the property before rendering the proeprty modal\n    const getInfo = async () => {\n        const prop = await getSingleListing(property.ListingID);\n        console.log(prop);\n        setFocusProperty(prop);\n        setIsLoading(false);\n    }\n\n    return (\n        <button className=\"marker-container\"\n            onClick={() => setModalIsOpen(true)}\n            onMouseEnter={() => setShowPreview(true)}\n            onMouseLeave={() => setShowPreview(false)}>\n            <div className=\"marker-button\"></div>\n            {showPreview &&\n                <div className=\"marker-prev\">\n                    <div className=\"flex-row flex-start\">\n                        <img src={property.HouseImageURL}\n                            className=\"marker-image\"\n                            alt=\"\"\n                        />\n                        <div className=\"marker-col\">\n                            <p className=\"marker-text marker-price\">{property.FullAddress}</p>\n                            <div className=\"marker-row\">\n                                {property.Beds !== \"None\" && <p className=\"marker-text\">{property.Beds + \" Beds\"}</p>}\n                                {property.Beds !== \"None\" && property.Baths !== \"None\" && <p className=\"marker-text\">/ </p>}\n                                {property.Baths !== \"None\" && <p className=\"marker-text\">{property.Baths + \" Baths\"}</p>}\n                            </div>\n                            {property.SquareFeet && property.SquareFeet > 0 &&\n                                <p className=\"marker-text\">{formatter.format(property.SquareFeet) + \" sqft\"}</p>}\n                        </div>\n                    </div>\n                </div>\n            }\n            <div onClick={(e) => e.stopPropagation()}>\n                <Modal\n                    isOpen={modalIsOpen}\n                    onRequestClose={() => setModalIsOpen(false)}\n                    contentLabel=\"Listing Modal\"\n                    style={customStyles}\n                    onAfterOpen={() => getInfo()}\n                >\n                    {!isLoading && focusProperty &&\n                        <>\n                            <Property property={focusProperty} isModal={true} />\n                            <button className=\"marker-modal-close\" onClick={() => setModalIsOpen(false)}>\n                                <img className=\"modal-img-close\" src={'images/close_modal.png'} alt=\"close modal\" />\n                            </button>\n                        </>\n                    }\n                </Modal>\n            </div>\n        </button>\n    )\n}\n\nexport default MapMarker;","export default {\n    GOOGLE_API_KEY: 'AIzaSyBuqbU9Jz7IRv0VQiJjVgg2zyqPoM85Ek0'\n}","import React, { useState, useEffect } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport MapMarker from './MapMarker';\nimport constants from '../assets/constants';\nimport '../styles.css'\n\nconst Map = ({ center, data, setBounds, updateListings, clickedProperty }) => {\n    const [zoom, setZoom] = useState(10);\n    const [map, setMap] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [isDisabled, setIsDisabled] = useState(true);\n\n    // Any time the user clicks a property on the right panel, have the map zoom in on that property\n    useEffect(() => {\n        setZoom(12)\n    }, [clickedProperty])\n\n    useEffect(() => {\n        if (map) {\n            var bounds = map.getBounds();\n            var NE = bounds.getNorthEast();\n            var SW = bounds.getSouthWest();\n\n            setBounds({\n                Lat: {\n                    Max: NE.lat(),\n                    Min: SW.lat()\n                },\n                Long: {\n                    Max: NE.lng(),\n                    Min: SW.lng()\n                }\n            })\n            map.setCenter(center);\n\n            console.log(bounds);\n        }\n    }, [center]);\n\n    const boundsChange = () => {\n        if (map && !loading) {\n            setIsDisabled(false);\n            var bounds = map.getBounds();\n            var NE = bounds.getNorthEast();\n            var SW = bounds.getSouthWest();\n\n            setBounds({\n                Lat: {\n                    Max: NE.lat(),\n                    Min: SW.lat()\n                },\n                Long: {\n                    Max: NE.lng(),\n                    Min: SW.lng()\n                }\n            })\n        }\n    }\n\n    // Customize the map as needed, documentation of google map react: https://github.com/google-map-react/google-map-react\n    // Check out google maps api for further specs\n    const handleApiLoaded = (map) => {\n        setMap(map);\n        map.setCenter(center);\n        setLoading(false);\n    };\n\n    const handleSearch = () => {\n        setIsDisabled(true);\n        updateListings();\n    }\n\n    return (\n        <div className=\"map-container\">\n            <button\n                className={isDisabled ? \"filter-search-here search-disabled\" : \"filter-search-here\"}\n                disabled={isDisabled}\n                onClick={() => handleSearch()}>Refresh Search\n            </button>\n            <GoogleMapReact\n                bootstrapURLKeys={{ key: constants.GOOGLE_API_KEY }}\n                defaultCenter={{ lat: 36.07967, lng: -94.222055 }}\n                defaultZoom={zoom}\n                resetBoundsOnResize={true}\n                yesIWantToUseGoogleMapApiInternals\n                onGoogleApiLoaded={({ map, maps }) => handleApiLoaded(map, maps)}\n                onChange={() => boundsChange()}\n            >\n                {data.map((listing, index) => {\n                    if (listing.Latitude && listing.Longitude) {\n                        return <MapMarker clickedProperty={clickedProperty} key={index} lat={listing.Latitude} lng={listing.Longitude} property={listing} />;\n                    }\n                })}\n            </GoogleMapReact>\n        </div>\n    );\n};\n\nexport default Map;","import React, { useState, useEffect, useRef } from 'react';\nimport Property from './Property';\n\n// Number of posts on screen at one time\nconst dataLimit = 10;\n\n// Number of pages user can see at one time\nconst pageLimit = 5;\n\n// Pagination tutorial: https://academind.com/tutorials/reactjs-pagination/\nconst PropertyList = ({ currentListings, fetchDetailedListings, data, setCenter, setClickedProperty }) => {\n    const [currentPage, setCurrentPage] = useState(1);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const firstUpdate = useRef(true);\n    useEffect(() => {\n        if (firstUpdate.current) {\n            firstUpdate.current = false;\n            return;\n        }\n        fetchDetailedListings(data, currentPage * dataLimit - dataLimit, currentPage * dataLimit);\n    }, [currentPage]);\n\n    useEffect(() => {\n        setCurrentPage(1);\n    }, [data])\n\n    const goToNextPage = () => {\n        setCurrentPage((page) => page + 1);\n    }\n\n    const goToPreviousPage = () => {\n        setCurrentPage((page) => page - 1);\n    }\n\n    const changePage = (event) => {\n        const pageNumber = Number(event.target.textContent);\n        setCurrentPage(pageNumber);\n    }\n\n    const getPaginationGroup = () => {\n        let start = Math.floor((currentPage - 1) / pageLimit) * pageLimit;\n        let res = new Array(pageLimit).fill().map((_, idx) => {\n            if (data[(start + idx) * dataLimit]) {\n                return start + idx + 1\n            }\n        });\n        return res;\n    };\n\n    if (isLoading) {\n        return <div className=\"property-list\">\n            <p>Loading data...</p>\n        </div>\n    }\n    else {\n        return (\n            <div>\n                <div className=\"property-list\">\n                    {currentListings.map((d, idx) => (\n                        <Property key={idx} property={d} isModal={false} {...{ setCenter, setClickedProperty }} />\n                    ))}\n                </div>\n                <div className=\"pagination\">\n                    {/* previous button */}\n                    <button\n                        onClick={goToPreviousPage}\n                        className={`prev ${currentPage === 1 ? 'disabled' : ''}`}\n                    >\n                        prev\n                 </button>\n\n                    {/* show page numbers */}\n                    {getPaginationGroup().map((item, index) => {\n                        if (item) {\n                            return (\n                                <button\n                                    key={index}\n                                    onClick={changePage}\n                                    className={`paginationItem ${currentPage === item ? 'active' : null}`}\n                                >\n                                    <span>{item}</span>\n                                </button>\n                            )\n                        }\n                    })}\n\n                    {/* next button */}\n                    <button\n                        onClick={goToNextPage}\n                        className={data[currentPage * dataLimit] !== undefined ? 'next' : 'next disabled'}\n                    >\n                        next\n                    </button>\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default PropertyList;","import React, { useState, useEffect } from 'react';\nimport FilterBar from './TopPanel/FilterBar';\nimport Map from './LeftPanel/Map';\nimport PropertyList from './RightPanel/PropertyList.js';\nimport { getAllLocations, getAllListings, getSingleListing, getAllHomeTypes } from './API/functions';\n\n// FAYETTEVILLE CONSTANTS USED ONLY FOR APP STARTUP\nconst LAT = 36.052437393;\nconst LONG = -94.13423309;\nconst FAYETTEVILLE = {\n  City: \"Fayetteville\",\n  Lat: 36.052437393,\n  Long: -94.13423309,\n  PostalCode: \"72701\",\n  State: \"AR\",\n  label: \"Fayetteville, AR\",\n  value: 10\n}\nconst BOUNDSHIFT = .05;\n\nconst App = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [focusedLocation, setFocusedLocation] = useState(null);             // Currently focused location \n  const [center, setCenter] = useState(null);                               // Center of the currently focused location\n  const [bounds, setBounds] = useState(null);                               // Bounds of the Google Map\n  const [houseTypes, setHouseTypes] = useState(null);                       // All of the possible house types\n  const [locations, setLocations] = useState(null);                         // All locations that can be focused on\n  const [data, setData] = useState(null);                                   // All the data from the app, less detailed than the focused data\n  const [currentListings, setCurrentListings] = useState(null);             // Most relevant listings based on focused location\n  const [sortOrder, setSortOrder] = useState('MostRecent');                 // How the data for the listings are being ordered\n  const [reqBody, setReqBody] = useState({});                               // Body parameters for the GetAllListings API call\n  const [clickedProperty, setClickedProperty] = useState(null);             // Represents the current property that was clicked in the right panel\n\n  // Ran on application start up\n  useEffect(async () => {\n    if (isLoading) {\n      setFocusedLocation(FAYETTEVILLE);\n      setCenter({ lat: LAT, lng: LONG });\n      setBounds({\n        Lat: {\n          Max: LAT + BOUNDSHIFT,\n          Min: LAT - BOUNDSHIFT\n        },\n        Long: {\n          Max: LONG + BOUNDSHIFT,\n          Min: LONG - BOUNDSHIFT\n        }\n      });\n\n      const allLocations = await getAllLocations();\n      setLocations(allLocations);\n\n      const homeTypes = await getAllHomeTypes();\n      setHouseTypes(homeTypes);\n\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Load data every time reqBody is updated and when the sort order is updated\n  useEffect(async () => {\n    if (!isLoading) {\n      updateListings();\n    }\n  }, [sortOrder, reqBody, isLoading]);\n\n  // Get all the correct data based on filtering, house type, sort by, and map location\n  const updateListings = async () => {\n    if (bounds) {\n      // console.log(bounds);\n      // console.log(sortOrder);\n      console.log(\"REQBODY\")\n      console.log(reqBody);\n\n      let response = await getAllListings({ ...reqBody, ...bounds }, sortOrder);\n      console.log(response);\n      setData(response);\n      await fetchDetailedListings(response, 0, 10);\n    }\n  }\n\n  // Gets more detail for each property that is currently in the right listings panel (start to end, inclusive)\n  const fetchDetailedListings = async (data, start, end) => {\n    let res = [];\n    for (let i = start; i < end; i++) {\n      if (i >= data.length) {\n        break;\n      }\n      const curr = data[i];\n      const resp = await getSingleListing(curr.ListingID);\n      res.push(resp);\n    }\n    setCurrentListings(res);\n  }\n\n  if (isLoading || currentListings == null || data == null) {\n    return <div></div>\n  } else {\n    return (\n      <div>\n        <FilterBar {...{\n          locations, focusedLocation, setFocusedLocation,\n          setCenter, houseTypes, setHouseTypes, sortOrder,\n          setSortOrder, setReqBody, reqBody, updateListings\n        }} />\n        <div className=\"flex-row flex-start\" >\n          <Map {...{ center, data, setBounds, updateListings, clickedProperty }} />\n          <PropertyList {...{ currentListings, fetchDetailedListings, data, setCenter, setClickedProperty }} />\n        </div>\n      </div>\n    )\n  }\n}\nexport default App;\n","import React, { useState } from 'react';\nimport App from '../App';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nconst AuthLandingPage = () => {\n    const { loginWithRedirect, user } = useAuth0();\n\n    if (!user) {\n        return (\n            <div className=\"landing-container\">\n                <div className=\"landing-module\">\n                    <img src={'images/arrived-logo-sm.png'} className=\"landing-logo\" alt=\"arrived homes\" />\n                    <p style={{ fontWeight: 400, marginBottom: 48 }}>Welcome to the Arrived Homes Acquisition Finder</p>\n                    <button className=\"landing-btn\" onClick={() => loginWithRedirect()}>Sign in</button>\n                </div>\n\n            </div>\n        )\n    } else {\n        return <App />\n    }\n\n}\n\nexport default AuthLandingPage;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Auth0Provider } from '@auth0/auth0-react';\nimport AuthLandingPage from './auth/AuthLandingPage';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n\nconsole.log(window.location.origin + '/frontend')\n\nReactDOM.render(\n  <Auth0Provider\n    domain={domain}\n    clientId={clientId}\n    redirectUri={window.location.origin + '/frontend'}\n  >\n    <AuthLandingPage />\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}