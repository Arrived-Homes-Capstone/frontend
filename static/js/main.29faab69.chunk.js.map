{"version":3,"sources":["TopPanel/SortBy.js","TopPanel/HouseType.js","TopPanel/LowHighFilter.js","TopPanel/MoreFilterOptions.js","TopPanel/DropdownFilter.js","TopPanel/MoreFilters.js","TopPanel/FilterBar.js","RightPanel/Property.js","LeftPanel/MapMarker.js","assets/constants.js","LeftPanel/Map.js","RightPanel/PropertyList.js","API/functions.js","App.js","reportWebVitals.js","index.js"],"names":["options","value","label","SortBy","sortOrder","setSortOrder","ref","updateListings","useRef","useState","isOpen","setIsOpen","handler","useEffect","listener","event","current","contains","target","className","includes","document","addEventListener","removeEventListener","useOnClickOutside","chooseSort","option","onClick","src","alt","map","HouseType","houseTypes","setHouseTypes","handleCloseOpen","style","width","index","newHouseTypes","JSON","parse","stringify","selected","handleOptionChoice","textAlign","formatter","Intl","NumberFormat","LowHighFilter","item","setItem","name","type","isEditingLow","setIsEditingLow","isEditingHigh","setIsEditingHigh","renderTypeIcon","low","onChange","e","updateItem","high","handleChangeLow","onBlur","format","onFocus","readOnly","handleChangeHigh","daysOnMarketOptions","styled","Select","priceReducedOptions","MoreFilters","setReqBody","reqBody","listPrice","setListPrice","squareFeet","setSquareFeet","beds","setBeds","baths","setBaths","yearBuilt","setYearBuilt","setFilters","a","body","filters","i","length","getFilterData","filterName","getDetail","filter","test","parseInt","StyledSelect","FilterBar","locations","focusedLocation","setFocusedLocation","setCenter","bounds","values","loc","undefined","lat","Lat","lng","Long","handleLocationChange","height","borderColor","borderRadius","paddingLeft","color","fontSize","backgroundColor","closeOnSelect","Property","property","isModal","console","log","HouseImageURL","FullAddress","City","result","ListPrice","OfferPrice","RenovationPrice","renderPrices","RentPrice","Beds","Baths","SquareFeet","renderAmenities","YearBuilt","YearRenovated","LotFootage","renderBuildDate","Math","round","ProformaData","InvestorEquityRequired","InvestorIRR","InvestorYield","ArrivedUpfrontRevenue","ArrivedPropertyAUMFees","root","getElementById","Modal","setAppElement","customStyles","content","top","left","paddingBottom","overflow","MapMarker","showPreview","setShowPreview","modalIsOpen","setModalIsOpen","onMouseEnter","onMouseLeave","stopPropagation","onRequestClose","contentLabel","Map","center","data","setBounds","zoom","setMap","loading","setLoading","isDisabled","setIsDisabled","getBounds","NE","getNorthEast","SW","getSouthWest","Max","Min","disabled","bootstrapURLKeys","key","constants","defaultCenter","defaultZoom","resetBoundsOnResize","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","maps","handleApiLoaded","boundsChange","listing","Latitude","Longitude","dataLimit","PropertyList","currentListings","fetchDetailedListings","currentPage","setCurrentPage","isLoading","firstUpdate","changePage","pageNumber","Number","textContent","d","idx","page","start","floor","Array","fill","_","getPaginationGroup","endpoint","getAllListings","order","fetch","method","headers","resp","json","getSingleListing","listingID","getAllLocations","res","curr","alreadySaved","state","State","abbrState","j","push","getAllHomeTypes","Quantity","HomeType","input","to","states","replace","txt","charAt","toUpperCase","substr","toLowerCase","App","setIsLoading","setLocations","setData","setCurrentListings","allLocations","homeTypes","response","end","ListingID","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.29faab69.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst options = [\n    { value: 'MostRecent', label: 'Date Listed (newest)' },\n    { value: 'LeastRecent', label: 'Date Listed (oldest)' },\n];\n\nconst SortBy = ({ sortOrder, setSortOrder, updateListings }) => {\n    // Create a ref that we add to the element for which we want to detect outside clicks\n    const ref = useRef();\n    // State for our modal\n    const [isOpen, setIsOpen] = useState(false);\n    // Call hook passing in the ref and a function to call on outside click\n    useOnClickOutside(ref, () => setIsOpen(false));\n\n    const renderOptions = () => {\n        return options.map(option => (\n            <button className={sortOrder === option.value ? \"filter-sort-option option-chosen\" : \"filter-sort-option\"}\n                onClick={() => chooseSort(option)} key={option.value}>\n                <p className=\"sort-option-text\">{option.label}</p>\n            </button>\n        ))\n    }\n\n    const chooseSort = (option) => {\n        setSortOrder(option.value);\n        setIsOpen(false);\n    }\n\n    const handleCloseOpen = () => {\n        if (!isOpen) {\n            setIsOpen(true);\n        } else {\n            setIsOpen(false);\n        }\n    }\n\n    return (\n        <div>\n            <button className=\"flex-row filter-sort-container filter-sort-touch\" onClick={() => handleCloseOpen()}>\n                <img src={'images/sort.png'} className=\"filter-sort filter-sort-touch\" alt=\"sort\" />\n                <p className=\"filter-sort-text filter-sort-touch\">SORT BY</p>\n            </button>\n            { isOpen &&\n                <div ref={ref} className=\"filter-sort-options\">\n                    {renderOptions()}\n                </div>\n            }\n        </div>\n    );\n};\n\nfunction useOnClickOutside(ref, handler) {\n    useEffect(() => {\n        const listener = event => {\n            // Do nothing if clicking ref's element or descendent elements\n            if (!ref.current || ref.current.contains(event.target)) {\n                return;\n            }\n\n            // Do not close if clicking \"Sort By\" button\n            if (event.target.className && event.target.className.includes('filter-sort-touch')) {\n                return;\n            }\n\n            handler(event);\n        };\n\n        document.addEventListener('mousedown', listener);\n        document.addEventListener('touchstart', listener);\n\n        return () => {\n            document.removeEventListener('mousedown', listener);\n            document.removeEventListener('touchstart', listener);\n        };\n    },\n        // Add ref and handler to effect dependencies\n        // It's worth noting that because passed in handler is a new ...\n        // ... function on every render that will cause this effect ...\n        // ... callback/cleanup to run every render. It's not a big deal ...\n        // ... but to optimize you can wrap handler in useCallback before ...\n        // ... passing it into this hook.\n        [ref, handler]\n    );\n}\n\nexport default SortBy;","import React, { useState, useEffect, useRef } from 'react';\n\nconst HouseType = ({ houseTypes, setHouseTypes, updateListings }) => {\n    const ref = useRef();\n    const [isOpen, setIsOpen] = useState(false);\n    useOnClickOutside(ref, () => setIsOpen(false));\n\n    // Reloads all the current house type options, either checking or unchecking the selected option\n    const handleOptionChoice = (option) => {\n        let newHouseTypes = JSON.parse(JSON.stringify(houseTypes));\n        newHouseTypes[option.index].selected = !houseTypes[option.index].selected;\n\n        setHouseTypes(newHouseTypes);\n    }\n\n    const renderOptions = () => {\n        return houseTypes.map((option, index) => (\n            <button className=\"filter-type-btn flex-row\" onClick={() => handleOptionChoice(option)} key={index}>\n                { option.selected\n                    ? <img src={'images/check_clicked.png'} alt=\"checkbox empty\" className=\"filter-check\" />\n                    : <img src={'images/check_empty.png'} alt=\"checkbox empty\" className=\"filter-check\" />\n                }\n                <p style={{ textAlign: 'left' }}>{option.label}</p>\n            </button>\n        ));\n    }\n\n    const handleCloseOpen = () => {\n        if (!isOpen) {\n            setIsOpen(true);\n        } else {\n            setIsOpen(false);\n        }\n    }\n\n    const handleDone = () => {\n        updateListings();\n        handleCloseOpen();\n    }\n\n    return (\n        <div>\n            {/* Button before click */}\n            <div className=\"flex-row\">\n                {isOpen\n                    ? <button className=\"flex-row filter-type-container filter-type-touch type-pressed\" onClick={() => handleCloseOpen()} >House Type</button>\n                    : <button className=\"flex-row filter-type-container filter-type-touch\" onClick={() => handleCloseOpen()}>House Type</button>\n                }\n\n                <div className=\"filter-type-arrow\">\n                    {isOpen\n                        ? <img src={'images/down_arrow_white.png'} className=\"downarrow filter-type-touch\" alt=\"down_arrow\" onClick={() => handleCloseOpen()} />\n                        : <img src={'images/down_arrow_2.png'} className=\"downarrow filter-type-touch\" alt=\"down_arrow\" onClick={() => handleCloseOpen()} />\n                    }\n                </div>\n            </div>\n\n            {/* Button after click */}\n            { isOpen &&\n                <div ref={ref} className=\"filter-type-options\" style={{ width: 150 }}>\n                    <p className=\"filter-type-title\" >Home Type</p>\n                    {renderOptions()}\n                    <button className=\"filter-type-done\" onClick={() => handleDone()}>Done</button>\n                </div>\n            }\n        </div>\n    );\n};\n\nfunction useOnClickOutside(ref, handler) {\n    useEffect(() => {\n        const listener = event => {\n            // Do nothing if clicking ref's element or descendent elements\n            if (!ref.current || ref.current.contains(event.target)) {\n                return;\n            }\n\n            // Do not close if clicking \"Home Type\" button\n            if (event.target.className && event.target.className.includes('filter-type-touch')) {\n                return;\n            }\n\n            handler(event);\n        };\n\n        document.addEventListener('mousedown', listener);\n        document.addEventListener('touchstart', listener);\n\n        return () => {\n            document.removeEventListener('mousedown', listener);\n            document.removeEventListener('touchstart', listener);\n        };\n    },\n        [ref, handler]\n    );\n}\n\nexport default HouseType;","import React, { useState } from 'react';\nimport '../styles.css';\n\nconst formatter = new Intl.NumberFormat();\n\n// https://bitbucket.org/rlestate/main/src/master/client/src/site-two/FilterBar/PriceSelectDrop.jsx\nconst LowHighFilter = ({ item, setItem, name, type }) => {\n\n    const [isEditingLow, setIsEditingLow] = useState(false);\n    const [isEditingHigh, setIsEditingHigh] = useState(false);\n\n    const handleChangeLow = (e) => {\n        let updateItem = e;\n        if (updateItem === '') {\n            updateItem = 'Min';\n        }\n        setItem({ low: updateItem, high: item.high });\n    }\n\n    const handleChangeHigh = (e) => {\n        let updateItem = e;\n        if (updateItem === '') {\n            updateItem = 'Max';\n        }\n        setItem({ low: item.low, high: updateItem });\n    }\n\n    const resetAmounts = () => {\n        setItem({ low: 'Min', high: 'Max' });\n    }\n\n    // Renders a dollar sign if it is a price, a 'ft' if square feet, or nothing\n    const renderTypeIcon = () => {\n        switch (type) {\n            case '$':\n                return <p className=\"low-high-dollar\">$</p>;\n            case 'ft':\n                return <p className=\"low-high-feet\">ft.</p>;\n            default:\n                return null;\n        }\n    }\n\n    // Only renders the reset button if either of the two inputs are non-zero\n    const renderResetButton = () => {\n        if (item.low != 'Min' || item.high != 'Max') {\n            return (\n                <button className=\"low-high-reset-container\" onClick={() => resetAmounts()}>\n                    <img src={'images/reset.png'} alt=\"reset filter\" className=\"low-high-reset-img\" />\n                </button>\n            )\n        } else {\n            return (\n                <button className=\"low-high-reset-container reset-hidden\">\n                    <img src={'images/reset.png'} alt=\"reset filter\" className=\"low-high-reset-img\" />\n                </button>\n            )\n        }\n    }\n\n    return (\n        <div>\n            <p className=\"low-high-text\">{name}</p>\n            <div className=\"low-high-row\">\n                <div className=\"low-high-container\">\n                    {renderTypeIcon()}\n                    {isEditingLow ? (\n                        <input\n                            className=\"low-high-input\"\n                            type=\"number\"\n                            value={item.low}\n                            onChange={(e) => handleChangeLow(e.target.value)}\n                            onBlur={(e) => {\n                                setIsEditingLow(false);\n                            }}\n                        />\n                    ) : (\n                        <input\n                            className=\"low-high-input\"\n                            type=\"text\"\n                            value={item.low === 'Min' || type === 'year' ? item.low : formatter.format(item.low)}\n                            onFocus={() => setIsEditingLow(true)}\n                            readOnly\n                        />\n                    )}\n                </div>\n\n                <div className=\"low-high-container\">\n                    {renderTypeIcon()}\n                    {isEditingHigh ? (\n                        <input\n                            className=\"low-high-input\"\n                            type=\"number\"\n                            value={item.high}\n                            onChange={(e) => handleChangeHigh(e.target.value)}\n                            onBlur={(e) => {\n                                setIsEditingHigh(false);\n                            }}\n                        />\n                    ) : (\n                        <input\n                            className=\"low-high-input\"\n                            type=\"text\"\n                            value={item.high === 'Max' || type === 'year' ? item.high : formatter.format(item.high)}\n                            onFocus={() => setIsEditingHigh(true)}\n                            readOnly\n                        />\n                    )}\n                </div>\n                {renderResetButton()}\n            </div>\n        </div>\n    )\n}\n\nexport default LowHighFilter;","export const daysOnMarketOptions = [\n    {\n        value: 'Any',\n        label: 'Any'\n    },\n    {\n        value: '1 day',\n        label: '1 day'\n    },\n    {\n        value: '7 days',\n        label: '7 days'\n    },\n    {\n        value: '14 days',\n        label: '14 days'\n    },\n    {\n        value: '30 days',\n        label: '30 days'\n    },\n    {\n        value: '90 days',\n        label: '90 day'\n    },\n    {\n        value: '6 months',\n        label: '6 months'\n    },\n    {\n        value: '12 months',\n        label: '12 months'\n    },\n    {\n        value: '24 months',\n        label: '24 months'\n    },\n    {\n        value: '36 months',\n        label: '36 months'\n    }\n];\n\nexport const priceReducedOptions = [\n    {\n        value: 'In the last 7 days',\n        label: 'In the last 7 days'\n    },\n    {\n        value: 'In the last 30 days',\n        label: 'In the last 30 days'\n    },\n    {\n        value: 'In the last 60 days',\n        label: 'In the last 60 days'\n    },\n    {\n        value: 'In the last 90 days',\n        label: 'In the last 90 days'\n    },\n    {\n        value: 'In the last 3 months',\n        label: 'In the last 3 months'\n    },\n    {\n        value: 'In the last 6 months',\n        label: 'In the last 6 months'\n    },\n    {\n        value: 'In the last 12 months',\n        label: 'In the last 12 months'\n    }\n];","import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport Select from \"react-dropdown-select\";\nimport '../styles.css';\n\nconst DropdownFilter = ({ item, setItem, itemOptions, name }) => {\n  // https://www.npmjs.com/package/react-dropdown-select\n  // Example: https://sanusart.github.io/react-dropdown-select/\n  const selectStyle = {\n    width: 220,\n    height: 1,\n    borderColor: '#888888',\n    borderRadius: 4,\n    paddingLeft: 20,\n    marginTop: 4,\n    color: '#888888',\n    fontSize: 12,\n    backgroundColor: 'white',\n    outline: 'none',\n  }\n\n  const [isVisible, setIsVisible] = useState(true);\n\n  const handleChange = (e) => {\n    if (e === undefined || e === null || e.length == 0) {\n      setItem(itemOptions[0]);\n    } else {\n      setItem(e[0]);\n    }\n  }\n\n  // If this is a component that needs a \"yes or no\" state\n  const renderCheckbox = () => {\n    if (name === 'Price Reduced') {\n      return (\n        <button className=\"dropdown-btn\" onClick={() => handleClick()}>\n          { isVisible\n            ? <img src={'/images/check_clicked.png'} alt=\"checkbox empty\" className=\"dropdown-check\" />\n            : <img src={'/images/check_empty.png'} alt=\"checkbox empty\" className=\"dropdown-check\" />\n          }\n        </button>\n      )\n    }\n  }\n\n  // Sets the Priced Reduced to null and hides the select component\n  const handleClick = () => {\n    if (isVisible) {\n      setItem({ value: null, label: null });\n    } else {\n      setItem(itemOptions[0]);\n    }\n    setIsVisible(!isVisible);\n  }\n\n  return (\n    <div>\n      <div className=\"dropdown-row\">\n        {renderCheckbox()}\n        <p className=\"low-high-text\" style={{ marginBottom: 0 }}>{name}</p>\n      </div>\n\n      { isVisible &&\n        <StyledSelect\n          options={itemOptions}\n          values={[item]}\n          onChange={(e) => handleChange(e)}\n          style={selectStyle}\n          closeOnSelect={true}\n          dropdownPosition=\"auto\"\n        />\n      }\n    </div>\n  );\n}\n\n// https://github.com/sanusart/react-dropdown-select/blob/master/docs/src/examples/Styled.js\nconst StyledSelect = styled(Select)`\n    \n  .react-dropdown-select-clear,\n  .react-dropdown-select-dropdown-handle {\n    color: #888;\n  }\n  .react-dropdown-select-option {\n    border: 1px solid #fff;\n  }\n  .react-dropdown-select-item {\n    color: #333;\n  }\n  .react-dropdown-select-input {\n    color: #333;\n  }\n  .react-dropdown-select-dropdown {\n    position: absolute;\n    left: 0;\n    border: solid;\n    border-color: transparent;\n    border-radius: 4px;\n    width: 220px;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n    max-height: 200px;\n    overflow: auto;\n    z-index: 9;\n    background: #fff;\n    color: #333 !important;\n\n    -webkit-box-shadow: 4px 4px 4px 0px rgba(0, 0, 0, 0.25);\n    -moz-box-shadow: 4px 4px 4px 0px rgba(0, 0, 0, 0.25);\n    box-shadow: 4px 4px 4px 0px rgba(0, 0, 0, 0.25);\n  }\n  .react-dropdown-select-item {\n    color: #333;\n    :hover {\n       background-color: #d9ddff;\n    }\n  }\n  .react-dropdown-select-item.react-dropdown-select-item-selected,\n  .react-dropdown-select-item.react-dropdown-select-item-active {\n    color: #fff;\n    background: #818cdc;\n  }\n  .react-dropdown-select-item.react-dropdown-select-item-disabled {\n    background: #818cdc;\n    color: #ccc;\n  }\n`;\n\nexport default DropdownFilter;","import React, { useState, useEffect, useRef } from 'react';\nimport LowHighFilter from './LowHighFilter';\nimport DropdownFilter from './DropdownFilter';\nimport { daysOnMarketOptions, priceReducedOptions } from './MoreFilterOptions';\n\nconst MoreFilters = ({ setReqBody, reqBody, updateListings }) => {\n    // Hide on click\n    const ref = useRef();\n    const [isOpen, setIsOpen] = useState(false);\n    useOnClickOutside(ref, () => setIsOpen(false));\n\n    const [listPrice, setListPrice] = useState({ low: 'Min', high: 'Max' });\n    const [offerPrice, setOfferPrice] = useState({ low: 'Min', high: 'Max' });\n    const [rentalPrice, setRentalPrice] = useState({ low: 'Min', high: 'Max' });\n    const [squareFeet, setSquareFeet] = useState({ low: 'Min', high: 'Max' });\n    const [beds, setBeds] = useState({ low: 'Min', high: 'Max' });\n    const [baths, setBaths] = useState({ low: 'Min', high: 'Max' });\n    const [yearBuilt, setYearBuilt] = useState({ low: 'Min', high: 'Max' });\n\n    const [onMarket, setOnMarket] = useState(daysOnMarketOptions[0]);\n    const [priceReduced, setPriceReduced] = useState(priceReducedOptions[0]);\n\n    const handleCloseOpen = () => {\n        if (!isOpen) {\n            setIsOpen(true);\n        } else {\n            setIsOpen(false);\n        }\n    }\n\n    const setFilters = async () => {\n        const body = {};\n        const filters = ['Bathrooms', 'Beds', 'Price', 'SqFt', 'YearBuilt'];\n        for (let i = 0; i < filters.length; i++) {\n            getFilterData(filters[i], body);\n        }\n\n        setReqBody({\n            ...reqBody,\n            ...body\n        });\n\n        handleCloseOpen()\n    }\n\n    const getFilterData = (filterName, body) => {\n        switch (filterName) {\n            case 'Bathrooms':\n                getDetail(filterName, baths, body);\n                break;\n            case 'Beds':\n                getDetail(filterName, beds, body);\n                break;\n            case 'Price':\n                getDetail(filterName, listPrice, body);\n                break;\n            case 'SqFt':\n                getDetail(filterName, squareFeet, body);\n                break;\n            case 'YearBuilt':\n                getDetail(filterName, yearBuilt, body);\n                break;\n            default:\n                return;\n        }\n    }\n    const getDetail = (filterName, filter, body) => {\n        if (filter.low !== 'Min' && /^\\d+$/.test(filter.low)) {\n            body[filterName + 'Low'] = parseInt(filter.low);\n        } else {\n            body[filterName + 'Low'] = 0;\n        }\n        if (filter.high !== 'Max' && /^\\d+$/.test(filter.high)) {\n            body[filterName + 'High'] = parseInt(filter.high);\n        } else {\n            body[filterName + 'High'] = 100000000\n        }\n    }\n\n    return (\n        <div>\n            {/* Button before click */}\n            <div className=\"flex-row\">\n                {isOpen\n                    ?\n                    <button className=\"flex-row filter-more-container filter-more-touch type-pressed\" onClick={() => handleCloseOpen()}>\n                        <img src={'images/filter_white.png'} alt=\"filter\" className=\"filter-more-img filter-more-touch\" />\n                    </button>\n                    :\n                    <button className=\"flex-row filter-more-container\" onClick={() => handleCloseOpen()}>\n                        <img src={'images/filter_gray.png'} alt=\"filter\" className=\"filter-more-img\" />\n                    </button>\n                }\n            </div>\n\n            {/* Button after click */}\n            { isOpen &&\n                <div ref={ref} className=\"filter-type-options\">\n                    <LowHighFilter item={listPrice} setItem={setListPrice} name=\"Listing Price\" type=\"$\" />\n                    {/* <LowHighFilter item={offerPrice} setItem={setOfferPrice} name=\"Offer Price\" type=\"$\" />\n                    <LowHighFilter item={rentalPrice} setItem={setRentalPrice} name=\"Rental Price\" type=\"$\" /> */}\n                    <LowHighFilter item={squareFeet} setItem={setSquareFeet} name=\"Square Feet\" type=\"ft\" />\n                    <LowHighFilter item={beds} setItem={setBeds} name=\"Beds\" type=\"\" />\n                    <LowHighFilter item={baths} setItem={setBaths} name=\"Baths\" type=\"\" />\n                    <LowHighFilter item={yearBuilt} setItem={setYearBuilt} name=\"Year Built\" type=\"year\" />\n\n                    {/* <DropdownFilter item={onMarket} setItem={setOnMarket} itemOptions={daysOnMarketOptions} name=\"Days on Market\" />\n                <DropdownFilter item={priceReduced} setItem={setPriceReduced} itemOptions={priceReducedOptions} name=\"Price Reduced\" /> */}\n\n                    <button className=\"filter-type-done\" onClick={() => setFilters()}>Set filters</button>\n                    {/* <button className=\"filter-type-done filter-more-trans\" onClick={() => handleCloseOpen()}>Load previous filters</button> */}\n                </div>\n            }\n        </div>\n    );\n};\n\nfunction useOnClickOutside(ref, handler) {\n    useEffect(() => {\n        const listener = event => {\n            // Do nothing if clicking ref's element or descendent elements\n            if (!ref.current || ref.current.contains(event.target)) {\n                return;\n            }\n\n            // Do not close if clicking \"Sort By\" button\n            if (event.target.className && event.target.className.includes('filter-more-touch')) {\n                return;\n            }\n\n            handler(event);\n        };\n\n        document.addEventListener('mousedown', listener);\n        document.addEventListener('touchstart', listener);\n\n        return () => {\n            document.removeEventListener('mousedown', listener);\n            document.removeEventListener('touchstart', listener);\n        };\n    },\n        // Add ref and handler to effect dependencies\n        // It's worth noting that because passed in handler is a new ...\n        // ... function on every render that will cause this effect ...\n        // ... callback/cleanup to run every render. It's not a big deal ...\n        // ... but to optimize you can wrap handler in useCallback before ...\n        // ... passing it into this hook.\n        [ref, handler]\n    );\n}\n\nexport default MoreFilters;","import React, { useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport SortBy from './SortBy';\nimport HouseType from './HouseType';\nimport MoreFilters from './MoreFilters';\nimport Select from \"react-dropdown-select\";\nimport '../styles.css';\n\nconst FilterBar = ({ locations, focusedLocation, setFocusedLocation,\n  setCenter, houseTypes, setHouseTypes, sortOrder, setSortOrder,\n  setReqBody, reqBody, updateListings, bounds }) => {\n\n  // https://www.npmjs.com/package/react-dropdown-select\n  // Example: https://sanusart.github.io/react-dropdown-select/\n  const selectStyle = {\n    width: 360,\n    height: 28,\n    borderColor: '#888888',\n    borderRadius: 4,\n    paddingLeft: 36,\n    color: '#333333',\n    fontSize: 18,\n    backgroundColor: 'white',\n  }\n\n  // Load data every time reqBody is updated\n  useEffect(async () => {\n  }, [bounds]);\n\n  const handleLocationChange = (loc) => {\n    if (loc === undefined || loc === null || loc.length == 0) {\n      setFocusedLocation(null);\n    } else {\n      setFocusedLocation(loc[0]);\n      setCenter({ lat: loc[0].Lat, lng: loc[0].Long });\n    }\n  }\n\n  return (\n    <div className=\"filter-container\">\n\n      {/* Text Input */}\n      <div className=\"flex-row\">\n        <div className=\"flex-row\">\n          <img src={'images/search.png'} className=\"filter-search\" alt=\"search\" />\n          <StyledSelect\n            options={locations}\n            values={[focusedLocation]}\n            onChange={(loc) => handleLocationChange(loc)}\n            style={selectStyle}\n            closeOnSelect={true}\n          />\n        </div>\n\n        <HouseType {...{ houseTypes, setHouseTypes, updateListings }} />\n\n        <MoreFilters {...{ setReqBody, reqBody, updateListings }} />\n\n      </div>\n      <SortBy {...{ sortOrder, setSortOrder, updateListings }} />\n    </div>\n  );\n};\n\n// https://github.com/sanusart/react-dropdown-select/blob/master/docs/src/examples/Styled.js\nconst StyledSelect = styled(Select)`\n    \n  .react-dropdown-select-clear,\n  .react-dropdown-select-dropdown-handle {\n    color: #888;\n  }\n  .react-dropdown-select-option {\n    border: 1px solid #fff;\n  }\n  .react-dropdown-select-item {\n    color: #333;\n  }\n  .react-dropdown-select-input {\n    color: #333;\n  }\n  .react-dropdown-select-dropdown {\n    position: absolute;\n    left: 0;\n    border: solid;\n    border-color: transparent;\n    border-radius: 4px;\n    width: 360px;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n    max-height: 300px;\n    overflow: auto;\n    z-index: 9;\n    background: #fff;\n    color: #333 !important;\n\n    -webkit-box-shadow: 4px 4px 4px 0px rgba(0, 0, 0, 0.25);\n    -moz-box-shadow: 4px 4px 4px 0px rgba(0, 0, 0, 0.25);\n    box-shadow: 4px 4px 4px 0px rgba(0, 0, 0, 0.25);\n  }\n  .react-dropdown-select-item {\n    color: #333;\n    :hover {\n       background-color: #d9ddff;\n    }\n  }\n  .react-dropdown-select-item.react-dropdown-select-item-selected,\n  .react-dropdown-select-item.react-dropdown-select-item-active {\n    color: #fff;\n    background: #818cdc;\n  }\n  .react-dropdown-select-item.react-dropdown-select-item-disabled {\n    background: #818cdc;\n    color: #ccc;\n  }\n`;\n\nexport default FilterBar;","import React from 'react';\nimport '../styles.css';\n\n// Dollar formatter\nconst formatter = Intl.NumberFormat();\n\nconst Property = ({ property, isModal }) => {\n    console.log(property)\n    // Renders the List, Offer, and Renovation prices\n    const renderPrices = () => {\n        let result = \"\";\n        if (property.ListPrice !== null) {\n            result += \"List: $\" + formatter.format(property.ListPrice) + `\\u00A0\\u00A0`;\n        }\n        if (property.OfferPrice && property.OfferPrice !== 'Need Agent Input') {\n            result += \" Offer: $\" + formatter.format(property.OfferPrice) + `\\u00A0\\u00A0`;\n        }\n        if (property.RenovationPrice && property.RenovationPrice !== 'Need Agent Input') {\n            result += \" Reno: $\" + formatter.format(property.RenovationPrice);\n        }\n\n        return result;\n    }\n\n    // Renders the beds, baths, and square feet\n    const renderAmenities = () => {\n        let result = \"\";\n        if (property.Beds) {\n            result += property.Beds + \" Bed\"\n        }\n        if (property.Beds && property.Baths) result += \" / \";\n        if (property.Baths) {\n            result += property.Baths + \" Bath\" + `\\u00A0\\u00A0`;\n        }\n        if (property.SquareFeet) {\n            result += formatter.format(property.SquareFeet) + \" sqft. house\"\n        }\n        return result;\n    }\n\n    const renderBuildDate = () => {\n        let result = \"\";\n        if (property.YearBuilt) {\n            result += \"Built: \" + property.YearBuilt + `\\u00A0\\u00A0`;\n        }\n        if (property.YearRenovated) {\n            result += \"Renovated: \" + property.YearRenovated\n        }\n        if (property.LotFootage) {\n            result += formatter.format(property.LotFootage) + \" sqft. lot size\"\n        }\n        return result;\n    }\n\n    return (\n        <div className=\"flex-row prop-container\">\n            {/* Left column */}\n            <div className=\"prop-col-1\">\n                <img src={property.HouseImageURL}\n                    className={isModal ? \"prop-image-lg\" : \"prop-image\"}\n                    alt=\"Single family home\"\n                />\n                {/* TODO: Set up this botton */}\n                {/* <button className=\"prop-proforma\" onClick={() => console.log(\"Link proforma\")}>View Proforma</button> */}\n            </div>\n            {/* Right column */}\n            <div className=\"prop-col-2\">\n                <p className=\"prop-title\">{property.FullAddress}, {property.City}</p>\n\n                <div className=\"prop-text-container\">\n                    <p>{renderPrices()}</p>\n                    {/* TODO: Check for agent notes on a low and high rent estimate. If this is there, render it */}\n                    {property.RentPrice != \"Need Agent Input\"\n                        && <p>Rent Estimate: ${formatter.format(property.RentPrice)}</p>\n                    }\n                    <p>{renderAmenities()}</p>\n                    <p>{renderBuildDate()}</p>\n                </div>\n                <div className=\"flex-row flex-start prop-text-container\">\n                    <div className=\"prop-proforma-col-1\">\n                        <p>Investor Equity Required</p>\n                        <p>Investor IRR (Year 7)</p>\n                        <p>Investor Yield (Year 1)</p>\n                        <p>Arrived Upfront Revenue</p>\n                        <p>Arrived Property AUM Fees (7 yr)</p>\n                        {/* TODO: Implement the below line when it is in the backend */}\n                        {/* <p>Arrived Management Markup (7yr)</p> */}\n                    </div>\n                    <div>\n                        <p>${formatter.format(Math.round(property.ProformaData.InvestorEquityRequired))}</p>\n                        <p>{Math.round(property.ProformaData.InvestorIRR * 10000) / 100}%</p>\n                        <p>{Math.round(property.ProformaData.InvestorYield * 10000) / 100}%</p>\n                        <p>${formatter.format(Math.round(property.ProformaData.ArrivedUpfrontRevenue))}</p>\n                        <p>${formatter.format(Math.round(property.ProformaData.ArrivedPropertyAUMFees))}</p>\n                        {/* <p>${formatter.format(property.ProformaData.ArrivedManagementMarkup)}</p> */}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Property;","import React, { useState } from 'react'\nimport Modal from 'react-modal';\nimport Property from '../RightPanel/Property';\nimport '../styles.css';\n\nconst formatter = Intl.NumberFormat();\nconst root = document.getElementById(\"root\");\nModal.setAppElement(root);\n\n// https://www.npmjs.com/package/react-modal\nconst customStyles = {\n    content: {\n        top: '20%',\n        left: '15%',\n        height: '50vh',\n        width: '70vw',\n        paddingLeft: '24px',\n        paddingBottom: '36px',\n        overflow: 'visible'\n    }\n}\n\n// On hover, it shows the image, buy price, beds/baths. Also, change color from red to blue.\n// On click, opens an alert with the entire house component\nconst MapMarker = ({ property }) => {\n    const [showPreview, setShowPreview] = useState(false);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n\n    return (\n        <button className=\"marker-container\"\n            onClick={() => setModalIsOpen(true)}\n            onMouseEnter={() => setShowPreview(true)}\n            onMouseLeave={() => setShowPreview(false)}>\n            <div className=\"marker-button\"></div>\n            {showPreview &&\n                <div className=\"marker-prev\">\n                    <div className=\"flex-row flex-start\">\n                        <img src={property.HouseImageURL}\n                            className=\"marker-image\"\n                            alt=\"\"\n                        />\n                        <div className=\"marker-col\">\n                            <p className=\"marker-text marker-price\">${formatter.format(property.ListPrice)}</p>\n                            <div className=\"marker-row\">\n                                {property.Beds !== \"None\" && <p className=\"marker-text\">{property.Beds + \" Beds\"}</p>}\n                                {property.Beds !== \"None\" && property.Baths !== \"None\" && <p className=\"marker-text\">/ </p>}\n                                {property.Baths !== \"None\" && <p className=\"marker-text\">{property.Baths + \" Baths\"}</p>}\n                            </div>\n                            {property.SquareFeet && property.SquareFeet > 0 &&\n                                <p className=\"marker-text\">{formatter.format(property.SquareFeet) + \" sqft\"}</p>}\n                        </div>\n                    </div>\n                </div>\n            }\n            <div onClick={e => e.stopPropagation()}>\n                <Modal\n                    isOpen={modalIsOpen}\n                    onRequestClose={() => setModalIsOpen(false)}\n                    contentLabel=\"Listing Modal\"\n                    style={customStyles}\n                >\n                    <Property property={property} isModal={true} />\n                    <button className=\"marker-modal-close\" onClick={() => setModalIsOpen(false)}>\n                        <img className=\"modal-img-close\" src={'images/close_modal.png'} alt=\"close modal\" />\n                    </button>\n\n                </Modal>\n            </div>\n        </button>\n    )\n}\n\nexport default MapMarker;","export default {\n    GOOGLE_API_KEY: 'AIzaSyBuqbU9Jz7IRv0VQiJjVgg2zyqPoM85Ek0'\n}","import React, { useState, useEffect } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport MapMarker from './MapMarker';\nimport constants from '../assets/constants';\nimport '../styles.css'\n\nconst Map = ({ center, data, setBounds, updateListings }) => {\n    const [zoom] = useState(10);\n    const [map, setMap] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [isDisabled, setIsDisabled] = useState(true);\n\n    useEffect(() => {\n        if (map) {\n            var bounds = map.getBounds();\n            var NE = bounds.getNorthEast();\n            var SW = bounds.getSouthWest();\n\n            setBounds({\n                Lat: {\n                    Max: NE.lat(),\n                    Min: SW.lat()\n                },\n                Long: {\n                    Max: NE.lng(),\n                    Min: SW.lng()\n                }\n            })\n            map.setCenter(center);\n        }\n    }, [center]);\n\n    const boundsChange = () => {\n        if (map && !loading) {\n            setIsDisabled(false);\n            var bounds = map.getBounds();\n            var NE = bounds.getNorthEast();\n            var SW = bounds.getSouthWest();\n\n            setBounds({\n                Lat: {\n                    Max: NE.lat(),\n                    Min: SW.lat()\n                },\n                Long: {\n                    Max: NE.lng(),\n                    Min: SW.lng()\n                }\n            })\n        }\n    }\n\n    // Customize the map as needed, documentation of google map react: https://github.com/google-map-react/google-map-react\n    // Check out google maps api for further specs\n    const handleApiLoaded = (map) => {\n        setMap(map);\n        map.setCenter(center);\n        setLoading(false);\n    };\n\n    const handleSearch = () => {\n        setIsDisabled(true);\n        updateListings();\n    }\n\n    return (\n        <div className=\"map-container\">\n            <button\n                className={isDisabled ? \"filter-search-here search-disabled\" : \"filter-search-here\"}\n                disabled={isDisabled}\n                onClick={() => handleSearch()}>Search Here\n            </button>\n            <GoogleMapReact\n                bootstrapURLKeys={{ key: constants.GOOGLE_API_KEY }}\n                defaultCenter={{ lat: 36.07967, lng: -94.222055 }}\n                defaultZoom={zoom}\n                resetBoundsOnResize={true}\n                yesIWantToUseGoogleMapApiInternals\n                onGoogleApiLoaded={({ map, maps }) => handleApiLoaded(map, maps)}\n                onChange={() => boundsChange()}\n            >\n                {data.map((listing, index) => {\n                    if (listing.Latitude && listing.Longitude) {\n                        return <MapMarker key={index} lat={listing.Latitude} lng={listing.Longitude} property={listing} />;\n                    }\n                })}\n            </GoogleMapReact>\n        </div>\n    );\n};\n\nexport default Map;","import React, { useState, useEffect, useRef } from 'react';\nimport Property from './Property';\n\n// Number of posts on screen at one time\nconst dataLimit = 10;\n\n// Number of pages user can see at one time\nconst pageLimit = 5;\n\n// Pagination tutorial: https://academind.com/tutorials/reactjs-pagination/\nconst PropertyList = ({ currentListings, fetchDetailedListings, data }) => {\n    const pages = Math.round(currentListings.length / dataLimit);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const firstUpdate = useRef(true);\n    useEffect(() => {\n        if (firstUpdate.current) {\n            firstUpdate.current = false;\n            return;\n        }\n        fetchDetailedListings(data, currentPage * dataLimit - dataLimit, currentPage * dataLimit);\n    }, [currentPage]);\n\n    useEffect(() => {\n        setCurrentPage(1);\n    }, [data])\n\n    const goToNextPage = () => {\n        setCurrentPage((page) => page + 1);\n    }\n\n    const goToPreviousPage = () => {\n        setCurrentPage((page) => page - 1);\n    }\n\n    const changePage = (event) => {\n        const pageNumber = Number(event.target.textContent);\n        setCurrentPage(pageNumber);\n    }\n\n    const getPaginationGroup = () => {\n        let start = Math.floor((currentPage - 1) / pageLimit) * pageLimit;\n        let res = new Array(pageLimit).fill().map((_, idx) => {\n            if (data[(start + idx) * dataLimit]) {\n                return start + idx + 1\n            }\n        });\n        return res;\n    };\n\n    if (isLoading) {\n        return <div className=\"property-list\">\n            <p>Loading data...</p>\n        </div>\n    }\n    else {\n        return (\n            <div>\n                <div className=\"property-list\">\n                    {currentListings.map((d, idx) => (\n                        <Property key={idx} property={d} isModal={false} />\n                    ))}\n                </div>\n                <div className=\"pagination\">\n                    {/* previous button */}\n                    <button\n                        onClick={goToPreviousPage}\n                        className={`prev ${currentPage === 1 ? 'disabled' : ''}`}\n                    >\n                        prev\n                 </button>\n\n                    {/* show page numbers */}\n                    {getPaginationGroup().map((item, index) => {\n                        if (item) {\n                            return (\n                                <button\n                                    key={index}\n                                    onClick={changePage}\n                                    className={`paginationItem ${currentPage === item ? 'active' : null}`}\n                                >\n                                    <span>{item}</span>\n                                </button>\n                            )\n                        }\n                    })}\n\n                    {/* next button */}\n                    <button\n                        onClick={goToNextPage}\n                        className={data[currentPage * dataLimit] !== undefined ? 'next' : 'next disabled'}\n                    >\n                        next\n                    </button>\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default PropertyList;","const endpoint = 'https://huskymarket.club';\nconst getListings = 'GetAllListings';\n\n// Example: http://18.224.93.180/GetAllListings?OrderType=MostRecent\n\n// Gets all the listings given a body parameter that is an object representing all filters\n// Also includes a URL parameter that tell show the listings should be sorted (least or most recent)\nexport const getAllListings = async (body, order) => {\n    const resp = await fetch(`${endpoint}/${getListings}?OrderType=${order}`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Headers': 'Content-Type'\n        },\n        body: JSON.stringify(body)\n    });\n\n    const content = await resp.json();\n    return content;\n}\n\n// Gets Agent notes and proforma calculations based on a single listing property\nexport const getSingleListing = async (listingID) => {\n    const resp = await fetch(`${endpoint}/GetSingleListing?ListingID=${listingID}`);\n    return resp.json();\n}\n\n// Get all the locations of all the Arrived Homes markets for the search bar component\n// Returns all the locations that the user can search for in the filter bar\n// Filters it so that there are no duplicates accoring to City and State name\nexport const getAllLocations = async () => {\n    const resp = await fetch(`${endpoint}/GetAllLocations`);\n    const data = await resp.json();\n    let res = [];\n\n    // Format the locations array to include a label and value\n    // This is O(n^2) and will need configuring in the future !!\n    for (let i = 0; i < data.length; i++) {\n        let curr = data[i];\n        let alreadySaved = false;\n        let state = curr.State;\n        if (state.length > 2) {\n            state = abbrState(state, 'abbr');\n            curr.State = state;\n        }\n\n        for (let j = 0; j < res.length; j++) {\n            if (res[j].City == curr.City && res[j].State == curr.State) {\n                alreadySaved = true;\n                break;\n            }\n        }\n\n        // If not already in the list of locations, add it\n        if (alreadySaved === false) {\n            curr.label = curr.City + \", \" + state;\n            curr.value = i;\n            res.push(curr);\n        }\n    }\n\n    return res;\n}\n\n// Get all the locations of all the Arrived Homes markets for the search bar component\nexport const getAllHomeTypes = async () => {\n    const resp = await fetch(`${endpoint}/GetAllHomeTypes`);\n    const data = await resp.json();\n    let res = [];\n    for (let i = 0; i < data.length; i++) {\n        let curr = data[i];\n        // There needs to be more than 1 listing of this type to add it to our filter bar\n        if (curr.Quantity > 1) {\n            res.push({\n                value: curr.HomeType,\n                label: curr.HomeType,\n                index: i,\n                selected: true\n            });\n        }\n\n    }\n    return res;\n}\n\nfunction abbrState(input, to) {\n\n    var states = [\n        ['Arizona', 'AZ'],\n        ['Alabama', 'AL'],\n        ['Alaska', 'AK'],\n        ['Arkansas', 'AR'],\n        ['California', 'CA'],\n        ['Colorado', 'CO'],\n        ['Connecticut', 'CT'],\n        ['Delaware', 'DE'],\n        ['Florida', 'FL'],\n        ['Georgia', 'GA'],\n        ['Hawaii', 'HI'],\n        ['Idaho', 'ID'],\n        ['Illinois', 'IL'],\n        ['Indiana', 'IN'],\n        ['Iowa', 'IA'],\n        ['Kansas', 'KS'],\n        ['Kentucky', 'KY'],\n        ['Louisiana', 'LA'],\n        ['Maine', 'ME'],\n        ['Maryland', 'MD'],\n        ['Massachusetts', 'MA'],\n        ['Michigan', 'MI'],\n        ['Minnesota', 'MN'],\n        ['Mississippi', 'MS'],\n        ['Missouri', 'MO'],\n        ['Montana', 'MT'],\n        ['Nebraska', 'NE'],\n        ['Nevada', 'NV'],\n        ['New Hampshire', 'NH'],\n        ['New Jersey', 'NJ'],\n        ['New Mexico', 'NM'],\n        ['New York', 'NY'],\n        ['North Carolina', 'NC'],\n        ['North Dakota', 'ND'],\n        ['Ohio', 'OH'],\n        ['Oklahoma', 'OK'],\n        ['Oregon', 'OR'],\n        ['Pennsylvania', 'PA'],\n        ['Rhode Island', 'RI'],\n        ['South Carolina', 'SC'],\n        ['South Dakota', 'SD'],\n        ['Tennessee', 'TN'],\n        ['Texas', 'TX'],\n        ['Utah', 'UT'],\n        ['Vermont', 'VT'],\n        ['Virginia', 'VA'],\n        ['Washington', 'WA'],\n        ['West Virginia', 'WV'],\n        ['Wisconsin', 'WI'],\n        ['Wyoming', 'WY'],\n    ];\n\n    if (to == 'abbr') {\n        input = input.replace(/\\w\\S*/g, function (txt) { return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase(); });\n        for (let i = 0; i < states.length; i++) {\n            if (states[i][0] == input) {\n                return (states[i][1]);\n            }\n        }\n    } else if (to == 'name') {\n        input = input.toUpperCase();\n        for (let i = 0; i < states.length; i++) {\n            if (states[i][1] == input) {\n                return (states[i][0]);\n            }\n        }\n    }\n}","import React, { useState, useEffect } from 'react';\nimport FilterBar from './TopPanel/FilterBar';\nimport Map from './LeftPanel/Map';\nimport PropertyList from './RightPanel/PropertyList.js';\nimport { getAllLocations, getAllListings, getSingleListing, getAllHomeTypes } from './API/functions';\n\nconst App = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [focusedLocation, setFocusedLocation] = useState(null);               // Currently focused location \n  const [center, setCenter] = useState(null);                                 // Center of the currently focused location\n  const [bounds, setBounds] = useState(null);                                 // Bounds of the Google Map\n  const [houseTypes, setHouseTypes] = useState(null);                         // All of the possible house types\n  const [locations, setLocations] = useState(null);                           // All locations that can be focused on\n  const [data, setData] = useState(null);                                     // All the data from the app, less detailed than the focused data\n  const [currentListings, setCurrentListings] = useState(null);               // Most relevant listings based on focused location\n  const [sortOrder, setSortOrder] = useState('MostRecent');                   // How the data for the listings are being ordered\n  const [reqBody, setReqBody] = useState({});                                 // Body parameters for the GetAllListings API call\n\n  // Ran on application start up\n  useEffect(async () => {\n    if (isLoading) {\n      updateListings();\n\n      const allLocations = await getAllLocations();\n      setLocations(allLocations);\n\n      setFocusedLocation(allLocations[1]);\n      setCenter({ lat: allLocations[1].Lat, lng: allLocations[1].Long });\n\n      const homeTypes = await getAllHomeTypes();\n      setHouseTypes(homeTypes);\n\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Load data every time reqBody is updated and when the sort order is oupdated\n  useEffect(async () => {\n    if (!isLoading) {\n      updateListings();\n    }\n  }, [sortOrder, reqBody]);\n\n  // Get all the correct data based on filtering, house type, sort by, and map location\n  const updateListings = async () => {\n    const response = await getAllListings({ ...reqBody, ...bounds }, sortOrder);\n    setData(response);\n    await fetchDetailedListings(response, 0, 10);\n  }\n\n  // Gets more detail for each property that is currently in the right listings panel\n  const fetchDetailedListings = async (data, start, end) => {\n    let res = [];\n    for (let i = start; i < end; i++) {\n      if (i >= data.length) {\n        break;\n      }\n      const curr = data[i];\n      const resp = await getSingleListing(curr.ListingID);\n      res.push(resp);\n    }\n    setCurrentListings(res);\n  }\n\n  if (isLoading || currentListings == null || data == null) {\n    return <div></div>\n  } else {\n    return (\n      <div>\n        <FilterBar {...{\n          locations, focusedLocation, setFocusedLocation,\n          setCenter, houseTypes, setHouseTypes, sortOrder,\n          setSortOrder, setReqBody, reqBody, updateListings, bounds\n        }} />\n        <div className=\"flex-row flex-start\" >\n          <Map {...{ center, data, setBounds, updateListings }} />\n          <PropertyList {...{ currentListings, fetchDetailedListings, data }} />\n        </div>\n      </div>\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}